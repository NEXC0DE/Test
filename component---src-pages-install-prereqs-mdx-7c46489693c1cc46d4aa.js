(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{nnKn:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return r})),t.d(n,"default",(function(){return d}));t("91GP"),t("rGqo"),t("yt8O"),t("Btvt"),t("RW0V"),t("q1tI");var i=t("7ljp"),a=t("013z");t("qKvR");function o(){return(o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e}).apply(this,arguments)}var r={},l=function(e){return function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(i.b)("div",n)}},b=l("PageDescription"),s=l("AnchorLinks"),c=l("AnchorLink"),p=l("InlineNotification"),u={_frontmatter:r},m=a.a;function d(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(i.b)(m,o({},u,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)(b,{mdxType:"PageDescription"},Object(i.b)("p",null,"Ensure your environment meets the following requirements prior to installing the DataPower Operator and deploying Custom Resources.")),Object(i.b)(s,{mdxType:"AnchorLinks"},Object(i.b)(c,{mdxType:"AnchorLink"},"Container environment"),Object(i.b)(c,{mdxType:"AnchorLink"},"Resource requirements"),Object(i.b)(c,{mdxType:"AnchorLink"},"Cluster-scope permissions"),Object(i.b)(c,{mdxType:"AnchorLink"},"Optional: PodSecurityPolicy"),Object(i.b)(c,{mdxType:"AnchorLink"},"Optional: SecurityContextConstraints"),Object(i.b)(c,{mdxType:"AnchorLink"},"Optional: Multiple Failure Zones")),Object(i.b)("h2",null,"Container environment"),Object(i.b)("h3",null,"Supported platforms"),Object(i.b)("p",null,"The DataPower Operator currently supports:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"OpenShift Container Platform (OCP) 4.6+"),Object(i.b)("li",{parentName:"ul"},"Kubernetes 1.17+")),Object(i.b)("h3",null,"Worker node configuration"),Object(i.b)("p",null,"Installation of the DataPower Operator does not support adding Tolerations to the Operator Deployment resource out-of-the-box. To install properly, there must be one worker in the desired availability zone that is not tainted. If Tolerations are nonnegotiable, you can install the DataPower Operator using the ",Object(i.b)("a",o({parentName:"p"},{href:"https://github.com/IBM/datapower-operator-chart"}),"helm chart")," and add the Tolerations to the Deployment template manually."),Object(i.b)("h2",null,"Resource requirements"),Object(i.b)("h3",null,"Operator"),Object(i.b)("p",null,"The DataPower Operator’s ",Object(i.b)("inlineCode",{parentName:"p"},"Deployment")," uses the following resource spec:"),Object(i.b)("pre",null,Object(i.b)("code",o({parentName:"pre"},{className:"language-yaml"}),'resources:\n  requests:\n    cpu: "500m"\n    memory: "512Mi"\n  limits:\n    cpu: 2\n    memory: "2Gi"\n')),Object(i.b)("p",null,"For more information on what this spec means, see ",Object(i.b)("a",o({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"}),"Managing Resources for Containers"),"."),Object(i.b)("h3",null,"Operand"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"The ",Object(i.b)("strong",{parentName:"li"},"minimum")," resource requirements for a single DataPower container are 4 CPU and 4 GB of memory."),Object(i.b)("li",{parentName:"ul"},"For API Connect workloads, a minimum of 8 GB of memory is required per container."),Object(i.b)("li",{parentName:"ul"},"For production high-availability, a minimum of 3 replicas (one per node) are recommended.")),Object(i.b)("p",null,"See also: ",Object(i.b)("a",o({parentName:"p"},{href:"https://www.ibm.com/support/pages/node/613133"}),"System requirements for IBM DataPower Gateways")),Object(i.b)("h2",null,"Cluster-scope permissions"),Object(i.b)("p",null,"The DataPower Operator requires the following cluster-scope permissions. These are brought in by a ",Object(i.b)("inlineCode",{parentName:"p"},"ClusterRole")," and bound to the operator’s ",Object(i.b)("inlineCode",{parentName:"p"},"ServiceAccount")," via ",Object(i.b)("inlineCode",{parentName:"p"},"ClusterRoleBinding"),"."),Object(i.b)("p",null,"Permissions to manage CustomResourceDefinition defaulting and validating webhooks:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: ",Object(i.b)("inlineCode",{parentName:"li"},"admissionregistration.k8s.io")),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"mutatingwebhookconfigurations"),", ",Object(i.b)("inlineCode",{parentName:"li"},"validatingwebhookconfigurations")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"create"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delete"),", ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"list"),", ",Object(i.b)("inlineCode",{parentName:"li"},"patch"),", ",Object(i.b)("inlineCode",{parentName:"li"},"update"),", ",Object(i.b)("inlineCode",{parentName:"li"},"watch"))),Object(i.b)("p",null,"Permissions needed for reconciliation of admission controllers (webhooks):"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: ",Object(i.b)("inlineCode",{parentName:"li"},"rbac.authorization.k8s.io")),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"clusterroles"),", ",Object(i.b)("inlineCode",{parentName:"li"},"clusterrolebindings")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"list"))),Object(i.b)("p",null,"Permissions needed for management of owned CustomResourceDefinitions:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: ",Object(i.b)("inlineCode",{parentName:"li"},"apiextensions.k8s.io")),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"customresourcedefinitions")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"update"))),Object(i.b)("p",null,"Permissions needed for management of conversion webhook, which can exist in other namespaces:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: (none)"),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"namespaces")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"list"))),Object(i.b)("p",null,"Permissions needed for management of conversion webhook, which can exist in other namespaces:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: (none)"),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"services"),", ",Object(i.b)("inlineCode",{parentName:"li"},"secrets")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"create"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delete"),", ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"list"),", ",Object(i.b)("inlineCode",{parentName:"li"},"patch"),", ",Object(i.b)("inlineCode",{parentName:"li"},"update"),", ",Object(i.b)("inlineCode",{parentName:"li"},"watch"))),Object(i.b)("p",null,"Permissions needed for management of conversion webhook, which can exist in other namespaces:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: ",Object(i.b)("inlineCode",{parentName:"li"},"apps")),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"deployments")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"create"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delete"),", ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"list"),", ",Object(i.b)("inlineCode",{parentName:"li"},"patch"),", ",Object(i.b)("inlineCode",{parentName:"li"},"update"),", ",Object(i.b)("inlineCode",{parentName:"li"},"watch"))),Object(i.b)("p",null,"Permissions needed for conversion webhook implementation across namespaces:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: ",Object(i.b)("inlineCode",{parentName:"li"},"datapower.ibm.com")),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"*")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"create"),", ",Object(i.b)("inlineCode",{parentName:"li"},"delete"),", ",Object(i.b)("inlineCode",{parentName:"li"},"get"),", ",Object(i.b)("inlineCode",{parentName:"li"},"list"),", ",Object(i.b)("inlineCode",{parentName:"li"},"patch"),", ",Object(i.b)("inlineCode",{parentName:"li"},"update"),", ",Object(i.b)("inlineCode",{parentName:"li"},"watch"))),Object(i.b)("p",null,"Permissions needed for OCP platform related checks:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"API Groups: ",Object(i.b)("inlineCode",{parentName:"li"},"config.openshift.io")),Object(i.b)("li",{parentName:"ul"},"Resources: ",Object(i.b)("inlineCode",{parentName:"li"},"clusterversions")),Object(i.b)("li",{parentName:"ul"},"Verbs: ",Object(i.b)("inlineCode",{parentName:"li"},"get"))),Object(i.b)("h2",null,"Optional: PodSecurityPolicy"),Object(i.b)("p",null,"The DataPower Operator is expected to work as-is with the standard ",Object(i.b)("inlineCode",{parentName:"p"},"restricted")," PodSecurityPolicy; however, if you wish to leverage a more restrictive policy the following can be used."),Object(i.b)("pre",null,Object(i.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: ibm-datapower-operator-restricted-psp\nspec:\n  allowPrivilegeEscalation: false\n  forbiddenSysctls:\n    - '*'\n  hostNetwork: false\n  hostPorts: false\n  requiredDropCapabilities:\n    - ALL\n  runAsUser:\n    rule: MustRunAsNonRoot\n  seLinux:\n    rule: RunAsAny\n  volumes:\n    - configMap\n    - emptyDir\n    - projected\n    - secret\n    - downwardAPI\n    - persistentVolumeClaim\n")),Object(i.b)("h2",null,"Optional: SecurityContextConstraints"),Object(i.b)("p",null,"The DataPower Operator is expected to work as-is with the standard ",Object(i.b)("inlineCode",{parentName:"p"},"restricted")," SecurityContextConstraints; however, if you wish to leverage a more restrictive constraints the following can be used."),Object(i.b)(p,{mdxType:"InlineNotification"},Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Note:")," This is only applicable to OpenShift (OCP) clusters.")),Object(i.b)("pre",null,Object(i.b)("code",o({parentName:"pre"},{className:"language-yaml"}),"kind: SecurityContextConstraints\napiVersion: v1\nmetadata:\n  name: ibm-datapower-operator-scc\nallowHostDirVolumePlugin: false\nallowHostIPC: false\nallowHostNetwork: false\nallowHostPID: false\nallowHostPorts: false\nallowPrivilegeEscalation: false\nallowPrivilegedContainer: false\nallowedCapabilities: null\napiVersion: security.openshift.io/v1\ndefaultAddCapabilities: null\ngroups:\n  - system:authenticated\npriority: null\nreadOnlyRootFilesystem: false\nrequiredDropCapabilities:\n  - ALL\nrunAsUser:\n  type: MustRunAsNonRoot\nseLinuxContext:\n  type: RunAsAny\nusers: []\nvolumes:\n  - configMap\n  - downwardAPI\n  - emptyDir\n  - persistentVolumeClaim\n  - projected\n  - secret\n")),Object(i.b)("h2",null,"Optional: Multiple Failure Zones"),Object(i.b)("p",null,"The DataPower Operator ",Object(i.b)("inlineCode",{parentName:"p"},"Deployment")," is designed to pods evenly across multiple Kubernetes zones. To take advantage of this functionality, follow the ",Object(i.b)("a",o({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#prerequisites"}),"prerequisites")," for Pod Topology Spread Constraints."),Object(i.b)("p",null,"With ",Object(i.b)("inlineCode",{parentName:"p"},"EvenPodsSpread")," enabled in the cluster, no more than one DataPower Operator pod will be deployed per zone. If ",Object(i.b)("inlineCode",{parentName:"p"},"replicaCount")," is higher than the number of available zones, the remaining replicas will not be scheduled."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-install-prereqs-mdx-7c46489693c1cc46d4aa.js.map