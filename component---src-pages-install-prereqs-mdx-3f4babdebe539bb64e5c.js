(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{nnKn:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return d}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var o=n("7ljp"),r=n("013z");n("qKvR");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var i={},l=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",t)}},s=l("PageDescription"),p=l("AnchorLinks"),c=l("AnchorLink"),u=l("InlineNotification"),b={_frontmatter:i},m=r.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(o.b)(m,a({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(s,{mdxType:"PageDescription"},Object(o.b)("p",null,"Ensure your environment meets the following requirements prior to installing the DataPower Operator and deploying Custom Resources.")),Object(o.b)(p,{mdxType:"AnchorLinks"},Object(o.b)(c,{mdxType:"AnchorLink"},"Container environment"),Object(o.b)(c,{mdxType:"AnchorLink"},"Resource requirements"),Object(o.b)(c,{mdxType:"AnchorLink"},"Optional: PodSecurityPolicy"),Object(o.b)(c,{mdxType:"AnchorLink"},"Optional: SecurityContextConstraints"),Object(o.b)(c,{mdxType:"AnchorLink"},"Optional: Multiple Failure Zones")),Object(o.b)("h2",null,"Container environment"),Object(o.b)("h3",null,"Supported platforms"),Object(o.b)("p",null,"The DataPower Operator currently supports:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"OpenShift Container Platform (OCP) 4.4+"),Object(o.b)("li",{parentName:"ul"},"Kubernetes 1.16+")),Object(o.b)("h3",null,"Worker node configuration"),Object(o.b)("p",null,"Installation of the DataPower Operator does not support adding Tolerations to the Operator Deployment resource out-of-the-box. To install properly, there must be one worker in the desired availability zone that is not tainted. If Tolerations are nonnegotiable, you can install the DataPower Operator using the ",Object(o.b)("a",a({parentName:"p"},{href:"https://github.com/IBM/datapower-operator-chart"}),"helm chart")," and add the Tolerations to the Deployment template manually."),Object(o.b)("h2",null,"Resource requirements"),Object(o.b)("h3",null,"Operator"),Object(o.b)("p",null,"The DataPower Operatorâ€™s ",Object(o.b)("inlineCode",{parentName:"p"},"Deployment")," uses the following resource spec:"),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-yaml"}),'resources:\n  requests:\n    cpu: "500m"\n    memory: "512Mi"\n  limits:\n    cpu: 2\n    memory: "2Gi"\n')),Object(o.b)("p",null,"For more information on what this spec means, see ",Object(o.b)("a",a({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/"}),"Managing Resources for Containers"),"."),Object(o.b)("h3",null,"Operand"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("strong",{parentName:"li"},"minimum")," resource requirements for a single DataPower container are 4 CPU and 4 GB of memory."),Object(o.b)("li",{parentName:"ul"},"For API Connect workloads, a minimum of 8 GB of memory is required per container."),Object(o.b)("li",{parentName:"ul"},"For production high-availability, a minimum of 3 replicas (one per node) are recommended.")),Object(o.b)("p",null,"See also: ",Object(o.b)("a",a({parentName:"p"},{href:"https://www.ibm.com/support/pages/node/613133"}),"System requirements for IBM DataPower Gateways")),Object(o.b)("h2",null,"Optional: PodSecurityPolicy"),Object(o.b)("p",null,"The DataPower Operator is expected to work as-is with the standard ",Object(o.b)("inlineCode",{parentName:"p"},"restricted")," PodSecurityPolicy; however, if you wish to leverage a more restrictive policy the following can be used."),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-yaml"}),"apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: ibm-datapower-operator-restricted-psp\nspec:\n  allowPrivilegeEscalation: false\n  forbiddenSysctls:\n    - '*'\n  hostNetwork: false\n  hostPorts: false\n  requiredDropCapabilities:\n    - ALL\n  runAsUser:\n    rule: MustRunAsNonRoot\n  seLinux:\n    rule: RunAsAny\n  volumes:\n    - configMap\n    - emptyDir\n    - projected\n    - secret\n    - downwardAPI\n    - persistentVolumeClaim\n")),Object(o.b)("h2",null,"Optional: SecurityContextConstraints"),Object(o.b)("p",null,"The DataPower Operator is expected to work as-is with the standard ",Object(o.b)("inlineCode",{parentName:"p"},"restricted")," SecurityContextConstraints; however, if you wish to leverage a more restrictive constraints the following can be used."),Object(o.b)(u,{mdxType:"InlineNotification"},Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Note:")," This is only applicable to OpenShift (OCP) clusters.")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{className:"language-yaml"}),"kind: SecurityContextConstraints\napiVersion: v1\nmetadata:\n  name: ibm-datapower-operator-scc\nallowHostDirVolumePlugin: false\nallowHostIPC: false\nallowHostNetwork: false\nallowHostPID: false\nallowHostPorts: false\nallowPrivilegeEscalation: false\nallowPrivilegedContainer: false\nallowedCapabilities: null\napiVersion: security.openshift.io/v1\ndefaultAddCapabilities: null\ngroups:\n  - system:authenticated\npriority: null\nreadOnlyRootFilesystem: false\nrequiredDropCapabilities:\n  - ALL\nrunAsUser:\n  type: MustRunAsNonRoot\nseLinuxContext:\n  type: RunAsAny\nusers: []\nvolumes:\n  - configMap\n  - downwardAPI\n  - emptyDir\n  - persistentVolumeClaim\n  - projected\n  - secret\n")),Object(o.b)("h2",null,"Optional: Multiple Failure Zones"),Object(o.b)("p",null,"The DataPower Operator ",Object(o.b)("inlineCode",{parentName:"p"},"Deployment")," is designed to pods evenly across multiple Kubernetes zones. To take advantage of this functionality, follow the ",Object(o.b)("a",a({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#prerequisites"}),"prerequisites")," for Pod Topology Spread Constraints."),Object(o.b)("p",null,"With ",Object(o.b)("inlineCode",{parentName:"p"},"EvenPodsSpread")," enabled in the cluster, no more than one DataPower Operator pod will be deployed per zone. If ",Object(o.b)("inlineCode",{parentName:"p"},"replicaCount")," is higher than the number of available zones, the remaining replicas will not be scheduled."))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-install-prereqs-mdx-3f4babdebe539bb64e5c.js.map