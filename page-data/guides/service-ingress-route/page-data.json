{"componentChunkName":"component---src-pages-guides-service-ingress-route-mdx","path":"/guides/service-ingress-route/","result":{"pageContext":{"frontmatter":{"title":"Exposing DataPower Services","description":"Guide to building services and ingresses for your DataPower cluster."},"relativePagePath":"/guides/service-ingress-route.mdx","titleType":"page","MdxNode":{"id":"60733695-18b9-5cf4-985b-f433d2459ee6","children":[],"parent":"e35bf3e3-0334-5bb5-8356-7b0de1469eed","internal":{"content":"---\ntitle: Exposing DataPower Services\ndescription: Guide to building services and ingresses for your DataPower cluster.\n---\n\n<PageDescription>\n\nUsers are expected to craft and manage Services and Routes that connect the external internet with their DataPower configurations.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Service management</AnchorLink>\n  <AnchorLink>Service creation</AnchorLink>\n  <AnchorLink>Route creation</AnchorLink>\n  <AnchorLink>Ingress creation</AnchorLink>\n</AnchorLinks>\n\n## Service management\n\nCreation of Services, Routes, and Ingresses serving DataPower configuration must be flexible, as to meet all possible permutations of customer configuration. The DataPower Operator cannot anticipate all possible configurations of Services, Routes and Ingresses needed or desired by users, so definition and management of those objects are left to the owners of the related DataPower configuration.\n\nUser created Services, Routes, and Ingresses will not be \"owned\" by the Operator or the `DataPowerService` Custom Resource with which they are affiliated. This means that, if the Operator or CR is deleted, the Services will remain.\n\nWhen DataPower configuration is updated for a particular instance, the Services, Routes, and Ingresses **will not** be updated automatically. Users will need to reconfigure these resources before the new configuration is exposed.\n\n## Service creation\n\nService creation and management for DataPower workloads is no different than [standard Kubernetes Services](https://kubernetes.io/docs/concepts/services-networking/service/).\n\nWriting a yaml for your Service is the recommended method of creating a Service, as it's declarative and can be version controlled. In your Service, you will specify the Ports you want exposed to the Internet. These ports are entirely dependent on your DataPower configuration. To link the Service to your cluster of DataPowers, you will need to provide the correct label selectors. They are defined as:\n```\napiVersion: v1\nkind: Service\nspec:\n  selector:\n    app.kubernetes.io/component: datapower\n    app.kubernetes.io/instance: <namespace>-<cr-name>\n```\nWhere `<cr-name>` is the name of your custom resource and `<namespace>` is the namespace in which DataPower is deployed.\n\nIn your service, you will need to specify each port that needs to be exposed to the internet. For example, if a Multi-Protocol Gateway is exposed on port `4545` and an XML Firewall application exposed on `4546`, your Service might look like:\n```\napiVersion: v1\nkind: Service\nspec:\n  selector:\n    app.kubernetes.io/component: datapower\n    app.kubernetes.io/instance: <namespace>-<cr-name>\n  ports:\n  - protocol: TCP\n    port: 4545\n    targetPort: 4545\n    name: mpgw\n  - protocol: TCP\n    port: 4546\n    targetPort: 4546\n    name: xml\n```\nWhen either a Route or Ingress is configured to connect via this Service, only the ports `4545` and `4546` will be available to use, all others will not connect.\n\n## Route creation\n\nRoute creation should be done in accordance to your Cloud Provider's Route implementation, following [standard OpenShift practices](https://docs.openshift.com/container-platform/4.5/networking/routes/route-configuration.html).\n\n## Ingress creation\n\nIngress creation should be done in accordance to your Cloud Provider's Ingress implementation, following [standard Kubernetes practices](https://kubernetes.io/docs/concepts/services-networking/ingress/).\n","type":"Mdx","contentDigest":"9f476471590a9008814075e4147b40ed","counter":109,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Exposing DataPower Services","description":"Guide to building services and ingresses for your DataPower cluster."},"exports":{},"rawBody":"---\ntitle: Exposing DataPower Services\ndescription: Guide to building services and ingresses for your DataPower cluster.\n---\n\n<PageDescription>\n\nUsers are expected to craft and manage Services and Routes that connect the external internet with their DataPower configurations.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Service management</AnchorLink>\n  <AnchorLink>Service creation</AnchorLink>\n  <AnchorLink>Route creation</AnchorLink>\n  <AnchorLink>Ingress creation</AnchorLink>\n</AnchorLinks>\n\n## Service management\n\nCreation of Services, Routes, and Ingresses serving DataPower configuration must be flexible, as to meet all possible permutations of customer configuration. The DataPower Operator cannot anticipate all possible configurations of Services, Routes and Ingresses needed or desired by users, so definition and management of those objects are left to the owners of the related DataPower configuration.\n\nUser created Services, Routes, and Ingresses will not be \"owned\" by the Operator or the `DataPowerService` Custom Resource with which they are affiliated. This means that, if the Operator or CR is deleted, the Services will remain.\n\nWhen DataPower configuration is updated for a particular instance, the Services, Routes, and Ingresses **will not** be updated automatically. Users will need to reconfigure these resources before the new configuration is exposed.\n\n## Service creation\n\nService creation and management for DataPower workloads is no different than [standard Kubernetes Services](https://kubernetes.io/docs/concepts/services-networking/service/).\n\nWriting a yaml for your Service is the recommended method of creating a Service, as it's declarative and can be version controlled. In your Service, you will specify the Ports you want exposed to the Internet. These ports are entirely dependent on your DataPower configuration. To link the Service to your cluster of DataPowers, you will need to provide the correct label selectors. They are defined as:\n```\napiVersion: v1\nkind: Service\nspec:\n  selector:\n    app.kubernetes.io/component: datapower\n    app.kubernetes.io/instance: <namespace>-<cr-name>\n```\nWhere `<cr-name>` is the name of your custom resource and `<namespace>` is the namespace in which DataPower is deployed.\n\nIn your service, you will need to specify each port that needs to be exposed to the internet. For example, if a Multi-Protocol Gateway is exposed on port `4545` and an XML Firewall application exposed on `4546`, your Service might look like:\n```\napiVersion: v1\nkind: Service\nspec:\n  selector:\n    app.kubernetes.io/component: datapower\n    app.kubernetes.io/instance: <namespace>-<cr-name>\n  ports:\n  - protocol: TCP\n    port: 4545\n    targetPort: 4545\n    name: mpgw\n  - protocol: TCP\n    port: 4546\n    targetPort: 4546\n    name: xml\n```\nWhen either a Route or Ingress is configured to connect via this Service, only the ports `4545` and `4546` will be available to use, all others will not connect.\n\n## Route creation\n\nRoute creation should be done in accordance to your Cloud Provider's Route implementation, following [standard OpenShift practices](https://docs.openshift.com/container-platform/4.5/networking/routes/route-configuration.html).\n\n## Ingress creation\n\nIngress creation should be done in accordance to your Cloud Provider's Ingress implementation, following [standard Kubernetes practices](https://kubernetes.io/docs/concepts/services-networking/ingress/).\n","fileAbsolutePath":"/home/travis/build/IBM/datapower-operator-doc/src/pages/guides/service-ingress-route.mdx"}}}}