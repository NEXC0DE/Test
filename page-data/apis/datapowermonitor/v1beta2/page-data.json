{"componentChunkName":"component---src-pages-apis-datapowermonitor-v-1-beta-2-mdx","path":"/apis/datapowermonitor/v1beta2/","result":{"pageContext":{"frontmatter":{"title":"DataPowerMonitor","tabs":["v1beta2"],"description":"DataPowerMonitor API definition"},"relativePagePath":"/apis/datapowermonitor/v1beta2.mdx","titleType":"page","MdxNode":{"id":"b1700aa4-72c5-57dd-835e-ff30e3e34395","children":[],"parent":"7cccaadf-17b2-5f70-be31-9fab343359da","internal":{"content":"---\ntitle: DataPowerMonitor\ntabs: ['v1beta2']\ndescription: DataPowerMonitor API definition\n---\n\n<PageDescription>\n\nThe `DataPowerMonitor` is a Custom Resource Definition used to monitor the Pods managed by a `DataPowerService` StatefulSet.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Spec</AnchorLink>\n  <AnchorLink>Status</AnchorLink>\n</AnchorLinks>\n\n# Spec\n\n## Properties\n\n|Property                         |Description                                   |Required|Default   |\n|---------------------------------|----------------------------------------------|--------|----------|\n|`lifecycleDebounceMs`            |Lifecycle debounce in milliseconds            |No      |`10000`   |\n|`peeringRecoveryCheckIntervalMs` |Scan interval for peering checks              |No      |`1000`    |\n|`monitorGatewayPeering`          |Boolean to enable peering management          |No      |`false`   |\n\n<AnchorLinks small>\n  <AnchorLink>lifecycleDebounceMs</AnchorLink>\n  <AnchorLink>peeringRecoveryCheckIntervalMs</AnchorLink>\n  <AnchorLink>monitorGatewayPeering</AnchorLink>\n</AnchorLinks>\n\n## `lifecycleDebounceMs`\n\nThis optional property sets the minimum time (in milliseconds) that must pass after a Pod event for the monitor controller to begin processing the event. If another Pod event occurs during this time, the timer resets.\n\nDefaults to `10000`.\n\n<InlineNotification>\n\nThe last Pod event timestamp can be seen in the `lastEvent` Status property.\n\n</InlineNotification>\n\n## `peeringRecoveryCheckIntervalMs`\n\nThis optional property sets the interval (in milliseconds) in which the monitor will scan for stale peers.\n\nDefaults to `1000`.\n\n<InlineNotification>\n\n**Note:** this property is only relevant if `monitorGatewayPeering` is enabled (`true`).\n\n</InlineNotification>\n\n## `monitorGatewayPeering`\n\nThis optional property enables (when set `true`) the [Gateway Peering Monitoring](/features/monitor#gateway-peering-monitoring) feature.\n\nDefaults to `false`.\n\n# Status\n\n<AnchorLinks>\n  <AnchorLink>LastEvent</AnchorLink>\n  <AnchorLink>WorkPending</AnchorLink>\n  <AnchorLink>WorkInProgress</AnchorLink>\n  <AnchorLink>Conditions</AnchorLink>\n  <AnchorLink>Phase</AnchorLink>\n</AnchorLinks>\n\n## Example\n\n### No recent Pod events\n\n```\n$ oc get dpm\nNAME        PHASE     LAST EVENT   WORK PENDING   WORK IN-PROGRESS   AGE\nexample     Running                false          false              5m7s\n\n$ oc describe dpm/example\n...\nStatus:\n  Conditions:\n  Last Event:\n  Phase:             Running\n  Work In Progress:  false\n  Work Pending:      false\n```\n\n### Work pending\n\n```\n$ oc get dpm\nNAME        PHASE     LAST EVENT             WORK PENDING   WORK IN-PROGRESS   AGE\nexample     Running   2020-09-21T17:18:52Z   true           false              2m55s\n\n$ oc describe dpm/example\n...\nStatus:\n  Conditions:\n  Last Event:        2020-09-21T17:18:52Z\n  Phase:             Running\n  Work In Progress:  false\n  Work Pending:      true\n```\n\n## LastEvent\n\nTimestamp of last Pod event in RFC 3339 format.\n\n<InlineNotification>\n\nThis field will be empty if no recent Pod events have occurred.\n\n</InlineNotification>\n\n## WorkPending\n\nBoolean to signal that work is pending on this instance.\n\n## WorkInProgress\n\nBoolean to signal that work is in-progress on this instance.\n\n## Conditions\n\nCurrently no conditions are generated. These may be added in future releases.\n\n## Phase\n\nThe `Phase` status property provides the current phase of the `DataPowerMonitor`. The value can be one the following:\n\n- `Pending` - The `DataPowerMonitor` has not yet been initialized.\n- `Running` - The `DataPowerMonitor` has been initialized and is monitoring.","type":"Mdx","contentDigest":"7ee7028e077285c4779a89020e481f97","counter":146,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"DataPowerMonitor","tabs":["v1beta2"],"description":"DataPowerMonitor API definition"},"exports":{},"rawBody":"---\ntitle: DataPowerMonitor\ntabs: ['v1beta2']\ndescription: DataPowerMonitor API definition\n---\n\n<PageDescription>\n\nThe `DataPowerMonitor` is a Custom Resource Definition used to monitor the Pods managed by a `DataPowerService` StatefulSet.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Spec</AnchorLink>\n  <AnchorLink>Status</AnchorLink>\n</AnchorLinks>\n\n# Spec\n\n## Properties\n\n|Property                         |Description                                   |Required|Default   |\n|---------------------------------|----------------------------------------------|--------|----------|\n|`lifecycleDebounceMs`            |Lifecycle debounce in milliseconds            |No      |`10000`   |\n|`peeringRecoveryCheckIntervalMs` |Scan interval for peering checks              |No      |`1000`    |\n|`monitorGatewayPeering`          |Boolean to enable peering management          |No      |`false`   |\n\n<AnchorLinks small>\n  <AnchorLink>lifecycleDebounceMs</AnchorLink>\n  <AnchorLink>peeringRecoveryCheckIntervalMs</AnchorLink>\n  <AnchorLink>monitorGatewayPeering</AnchorLink>\n</AnchorLinks>\n\n## `lifecycleDebounceMs`\n\nThis optional property sets the minimum time (in milliseconds) that must pass after a Pod event for the monitor controller to begin processing the event. If another Pod event occurs during this time, the timer resets.\n\nDefaults to `10000`.\n\n<InlineNotification>\n\nThe last Pod event timestamp can be seen in the `lastEvent` Status property.\n\n</InlineNotification>\n\n## `peeringRecoveryCheckIntervalMs`\n\nThis optional property sets the interval (in milliseconds) in which the monitor will scan for stale peers.\n\nDefaults to `1000`.\n\n<InlineNotification>\n\n**Note:** this property is only relevant if `monitorGatewayPeering` is enabled (`true`).\n\n</InlineNotification>\n\n## `monitorGatewayPeering`\n\nThis optional property enables (when set `true`) the [Gateway Peering Monitoring](/features/monitor#gateway-peering-monitoring) feature.\n\nDefaults to `false`.\n\n# Status\n\n<AnchorLinks>\n  <AnchorLink>LastEvent</AnchorLink>\n  <AnchorLink>WorkPending</AnchorLink>\n  <AnchorLink>WorkInProgress</AnchorLink>\n  <AnchorLink>Conditions</AnchorLink>\n  <AnchorLink>Phase</AnchorLink>\n</AnchorLinks>\n\n## Example\n\n### No recent Pod events\n\n```\n$ oc get dpm\nNAME        PHASE     LAST EVENT   WORK PENDING   WORK IN-PROGRESS   AGE\nexample     Running                false          false              5m7s\n\n$ oc describe dpm/example\n...\nStatus:\n  Conditions:\n  Last Event:\n  Phase:             Running\n  Work In Progress:  false\n  Work Pending:      false\n```\n\n### Work pending\n\n```\n$ oc get dpm\nNAME        PHASE     LAST EVENT             WORK PENDING   WORK IN-PROGRESS   AGE\nexample     Running   2020-09-21T17:18:52Z   true           false              2m55s\n\n$ oc describe dpm/example\n...\nStatus:\n  Conditions:\n  Last Event:        2020-09-21T17:18:52Z\n  Phase:             Running\n  Work In Progress:  false\n  Work Pending:      true\n```\n\n## LastEvent\n\nTimestamp of last Pod event in RFC 3339 format.\n\n<InlineNotification>\n\nThis field will be empty if no recent Pod events have occurred.\n\n</InlineNotification>\n\n## WorkPending\n\nBoolean to signal that work is pending on this instance.\n\n## WorkInProgress\n\nBoolean to signal that work is in-progress on this instance.\n\n## Conditions\n\nCurrently no conditions are generated. These may be added in future releases.\n\n## Phase\n\nThe `Phase` status property provides the current phase of the `DataPowerMonitor`. The value can be one the following:\n\n- `Pending` - The `DataPowerMonitor` has not yet been initialized.\n- `Running` - The `DataPowerMonitor` has been initialized and is monitoring.","fileAbsolutePath":"/home/travis/build/IBM/datapower-operator-doc/src/pages/apis/datapowermonitor/v1beta2.mdx"}}}}