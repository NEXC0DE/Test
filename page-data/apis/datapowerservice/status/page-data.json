{"componentChunkName":"component---src-pages-apis-datapowerservice-status-mdx","path":"/apis/datapowerservice/status/","result":{"pageContext":{"frontmatter":{"title":"DataPowerService","tabs":["Spec","Status"],"description":"DataPowerService Status definition"},"relativePagePath":"/apis/datapowerservice/status.mdx","titleType":"page","MdxNode":{"id":"ab5eb4db-4b14-5106-880e-427fb83a66c8","children":[],"parent":"dcb0d2b3-46ae-5dfa-9a15-2dfe296c501a","internal":{"content":"---\ntitle: DataPowerService\ntabs: ['Spec', 'Status']\ndescription: DataPowerService Status definition\n---\n\n<PageDescription>\n\nThe `DataPowerService` is a Custom Resource Definition used to deploy and manage a DataPower StatefulSet.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Conditions</AnchorLink>\n  <AnchorLink>Custom Images</AnchorLink>\n  <AnchorLink>Nodes</AnchorLink>\n  <AnchorLink>Phase</AnchorLink>\n  <AnchorLink>Versions</AnchorLink>\n</AnchorLinks>\n\n## Example\n\n```\n$ oc get dp\nNAME        READY   SUMMARY                           VERSION    ERROR   AGE\ndpservice   True    StatefulSet replicas ready: 3/3   10.0.0.0   n/a     2m16s\n\n$ oc describe dp/dpservice\n...\nStatus:\n  Conditions:\n    Last Transition Time:  2020-05-18T23:16:28Z\n    Message:               StatefulSet replicas ready: 3/3\n    Reason:                StatefulSetReady\n    Status:                True\n    Type:                  Ready\n    Last Transition Time:  2020-05-18T23:14:37Z\n    Message:               n/a\n    Reason:                NoError\n    Status:                False\n    Type:                  ReconcileError\n  Custom Images:           false\n  Nodes:\n    dpservice-0\n    dpservice-1\n    dpservice-2\n  Phase:  Running\n  Versions:\n    Available:\n      Channels:\n        Name:  10.0.0\n      Versions:\n        Name:    10.0.0.0\n    Reconciled:  10.0.0.0\n```\n\n## Conditions\n\nThe `DataPowerService` supports Kubernetes [Conditions](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties). These `Conditions` can be viewed as a snapshot of the current and most up-to-date status of the `DataPowerService` instance.\n\nThe `Ready` condition, for example, will be set `True` when all of the Pods in the StatefulSet are `Ready`, and the number of replicas in the StatefulSet matches the desired number of replicas set by the `DataPowerService` instance spec.\n\nThe `ReconcileError` condition will be set `True` when an error is encountered during reconciliation of the `DataPowerService`. The `Reason` and `Message` should have details regarding what the error may have been, such as a referenced ConfigMap not being found.\n\nBoth of these conditions are exposed in the `get` output of the `DataPowerService` as well, for each checking:\n\n```\n$ oc get dp\nNAME        READY   SUMMARY                           VERSION    ERROR   AGE\ndpservice   True    StatefulSet replicas ready: 3/3   10.0.0.0   n/a     2m16s\n```\n\n## Custom Images\n\nThe `CustomImages` status property is a boolean flag that will be set `True` when a custom image (set via the `image` property in the CR spec) is being used.\n\n## Nodes\n\nThe `Nodes` status provides the list of DataPower Pods currently deployed via the StatefulSet.\n\n## Phase\n\nThe `Phase` status property provides the current phase of the `DataPowerService`. The value can be one the following:\n\n- `Pending` - There are no errors, but the `DataPowerService` is not yet `Ready`.\n- `Running` - There are no errors, and the `DataPowerService` is `Ready`.\n- `Failed` - There has been a `ReconcileError`.\n\n## Versions\n\nThe `Versions` status provides information about the currently reconciled version of the operand (DataPower), as well as the available versions and channels the operator supports.\n\nA channel, such as `10.0.0`, allows for a user to subscribe to a stream of releases. When initially deployed with the `version` property in the CR spec set to a channel, the operator will automatically install the latest available version within that channel. When new versions are released in that channel, the operands (CR instances) will automatically be upgraded by the operator.\n\nThe currently reconciled version will always be available in `status.versions.reconciled`, even if the `version` specified in the CR spec is a channel.\n","type":"Mdx","contentDigest":"1c507b4b309f40093596dd301c71a34e","counter":140,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"DataPowerService","tabs":["Spec","Status"],"description":"DataPowerService Status definition"},"exports":{},"rawBody":"---\ntitle: DataPowerService\ntabs: ['Spec', 'Status']\ndescription: DataPowerService Status definition\n---\n\n<PageDescription>\n\nThe `DataPowerService` is a Custom Resource Definition used to deploy and manage a DataPower StatefulSet.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Conditions</AnchorLink>\n  <AnchorLink>Custom Images</AnchorLink>\n  <AnchorLink>Nodes</AnchorLink>\n  <AnchorLink>Phase</AnchorLink>\n  <AnchorLink>Versions</AnchorLink>\n</AnchorLinks>\n\n## Example\n\n```\n$ oc get dp\nNAME        READY   SUMMARY                           VERSION    ERROR   AGE\ndpservice   True    StatefulSet replicas ready: 3/3   10.0.0.0   n/a     2m16s\n\n$ oc describe dp/dpservice\n...\nStatus:\n  Conditions:\n    Last Transition Time:  2020-05-18T23:16:28Z\n    Message:               StatefulSet replicas ready: 3/3\n    Reason:                StatefulSetReady\n    Status:                True\n    Type:                  Ready\n    Last Transition Time:  2020-05-18T23:14:37Z\n    Message:               n/a\n    Reason:                NoError\n    Status:                False\n    Type:                  ReconcileError\n  Custom Images:           false\n  Nodes:\n    dpservice-0\n    dpservice-1\n    dpservice-2\n  Phase:  Running\n  Versions:\n    Available:\n      Channels:\n        Name:  10.0.0\n      Versions:\n        Name:    10.0.0.0\n    Reconciled:  10.0.0.0\n```\n\n## Conditions\n\nThe `DataPowerService` supports Kubernetes [Conditions](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties). These `Conditions` can be viewed as a snapshot of the current and most up-to-date status of the `DataPowerService` instance.\n\nThe `Ready` condition, for example, will be set `True` when all of the Pods in the StatefulSet are `Ready`, and the number of replicas in the StatefulSet matches the desired number of replicas set by the `DataPowerService` instance spec.\n\nThe `ReconcileError` condition will be set `True` when an error is encountered during reconciliation of the `DataPowerService`. The `Reason` and `Message` should have details regarding what the error may have been, such as a referenced ConfigMap not being found.\n\nBoth of these conditions are exposed in the `get` output of the `DataPowerService` as well, for each checking:\n\n```\n$ oc get dp\nNAME        READY   SUMMARY                           VERSION    ERROR   AGE\ndpservice   True    StatefulSet replicas ready: 3/3   10.0.0.0   n/a     2m16s\n```\n\n## Custom Images\n\nThe `CustomImages` status property is a boolean flag that will be set `True` when a custom image (set via the `image` property in the CR spec) is being used.\n\n## Nodes\n\nThe `Nodes` status provides the list of DataPower Pods currently deployed via the StatefulSet.\n\n## Phase\n\nThe `Phase` status property provides the current phase of the `DataPowerService`. The value can be one the following:\n\n- `Pending` - There are no errors, but the `DataPowerService` is not yet `Ready`.\n- `Running` - There are no errors, and the `DataPowerService` is `Ready`.\n- `Failed` - There has been a `ReconcileError`.\n\n## Versions\n\nThe `Versions` status provides information about the currently reconciled version of the operand (DataPower), as well as the available versions and channels the operator supports.\n\nA channel, such as `10.0.0`, allows for a user to subscribe to a stream of releases. When initially deployed with the `version` property in the CR spec set to a channel, the operator will automatically install the latest available version within that channel. When new versions are released in that channel, the operands (CR instances) will automatically be upgraded by the operator.\n\nThe currently reconciled version will always be available in `status.versions.reconciled`, even if the `version` specified in the CR spec is a channel.\n","fileAbsolutePath":"/home/travis/build/IBM/datapower-operator-doc/src/pages/apis/datapowerservice/status.mdx"}}}}