{"componentChunkName":"component---src-pages-release-notes-index-mdx","path":"/release-notes/","result":{"pageContext":{"frontmatter":{"title":"Release Notes","description":"IBM DataPower Operator release notes"},"relativePagePath":"/release-notes/index.mdx","titleType":"page","MdxNode":{"id":"4c348eb2-110d-5367-ae0f-c0102e7279d9","children":[],"parent":"625f1ec4-28b5-5219-8a0a-850d1f377b2d","internal":{"content":"---\ntitle: Release Notes\ndescription: IBM DataPower Operator release notes\n---\n\n## 1.2.3\n\n- Add support for DataPower firmware version `10.0.1.3`, available in the `10.0-eus` and `10.0-lts` [channels](/apis/datapowerservice/v1beta2#channels).\n- Conversion webhook management will now upgrade conversion webhook Deployment as part of operator upgrade.\n- Fix split-cluster issue related to gateway-peering in API Connect Gateway deployments.\n- Fix reconciliation of `spec.labels` in `DataPowerService` custom resource instances.\n- Fix `status.mgmtPorts` update behavior when StatefulSet is not `Ready`.\n- Fix DataPower config initialization sequence and behavior.\n- Fix an issue related to capital domain names.\n\n## 1.3.0\n\n### v1beta3 API\n\nThis version brings a new `v1beta3` version of the `DataPowerService` CRD, adding the following capabilities:\n\n- Horizontal and Vertical Pod Autoscaling\n- Kubernetes container lifecycle hooks\n- License acceptance enforcement during upgrade\n- Pause reconciliation for troubleshooting\n\nUpon upgrading to `1.3.0`, any `v1beta2` `DataPowerService` instances will automatically be [migrated](/features/api-migration#v1beta3-migration) to `v1beta3`.\n\nNote that only the `DataPowerService` CRD has updated to `v1beta3`, the `DataPowerMonitor` CRD remains at `v1beta2`.\n\n### Enhancements\n\n- Conversion webhook management will automatically upgrade the conversion webhook runtime when necessary (such as upgrade from `1.2.x` to `1.3.x`).\n- Stricter validation for minimum CPU and Memory allocations for DataPower containers.\n\n### Changes\n\n- Minimum CPU count for DataPower containers has been lowered to `1`.\n  - The default CPU request for nonproduction containers is now `1`.\n  - The default CPU request for production containers remains `4`.\n- DataPowerService CPU request (`spec.resources.requests.cpu`) now supports [Kubernetes resource quantity](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes) formatting.\n  - This means that CPU can be requested using milli-CPU string, such as `4000m` for 4 cores.\n  - Partial CPU values (such as `2500m` are **not** supported).\n\n### Fixes\n\n- Fix ordering of application domain config initialization during DataPower container startup.\n\n## 1.2.2\n\n- Add support for DataPower firmware version `10.0.1.2`.\n- Fix issue relating to `temporary:///` file system cleanup during DataPower pod initialization.\n- Update Go to address CVEs: CVE-2020-28367, CVE-2020-28366, CVE-2020-28362.\n\n## 1.2.1\n\n- Fix Pod Topology Spread Constraints.\n  - Set `topologyKey` to well-known \"zone\" label `topology.kubernetes.io/zone`.\n  - Set `whenUnsatisfiable` to `ScheduleAnyway` to avoid blocked scheduling.\n\n## 1.2.0\n\n### Enhancements\n\n- Add support for `datapower-cp4i` image, see [Image selection](/features/entitled-registry#image-selection) and [Cloud Pak for Integration: Gateway runtime](https://www.ibm.com/support/knowledgecenter/SS9H2Y_10.0/com.ibm.dp.doc/icp4i.html).\n- Add support for DataPower version `10.0.1.1`.\n- Add support for Cloud Pak for Integration 2020.4.1 EUS release.\n- Pod scheduling errors are now raised as `Conditions` on the `DataPowerService` instance.\n\n### Changes\n\n- `DataPowerService` CR names are now limited to 52 characters.\n\n### Deprecated\n\n- `storage.volumeMode` is deprecated, and will now always be set to `Filesystem` for `persistent` storage requests.\n  - If set to `Block` previously, the CR will be migrated to use `Filesystem` instead, automatically.\n\n### Platform\n\n- Minimum OCP version is now 4.6.\n- Minimum Kubernetes version is now 1.17.\n\n## 1.1.1\n\n- Fixes an issue relating to metering and licensing of DataPower Virtual Edition for Nonproduction, when deployed in IBM Cloud Pak for Integration.\n- Fixes an issue relating to the `storage.size` property rendering in OCP Console UI, as well as IBM Cloud Pak for Integration Platform Navigator.\n- Fixes an issue relating to the name generation and reconciliation of the `username-commands` ConfigMap created by the operator.\n- Adds documentation `links` to the `ClusterServiceVersion` for both CRDs, as well as this documentation website.\n- Conversion webhook management routine will now adopt orphaned webhook deployments if found during reconciliation.\n\n## 1.1.0\n\n### v1beta2 APIs\n\n`1.1.0` introduces a new `v1beta2` API version, consisting of an **updated** [`DataPowerService`](/apis/datapowerservice/v1beta2) CustomResourceDefition (CRD), and a **new** [`DataPowerMonitor`](/apis/datapowermonitor/v1beta2) CRD.\n\nFor more details on the (automatic) API migration process, see [API Migration](/features/api-migration).\n\nWith the new `v1beta2` API, the following changes have been made:\n\n#### `DataPowerService`\n\n- Removed `dataPowerMonitor` (replaced by `DataPowerMonitor` CRD).\n- Added support for custom [`tolerations`](/apis/datapowerservice/v1beta2#tolerations).\n- Added support for custom [`nodeSelector`](/apis/datapowerservice/v1beta2#nodeselector).\n- Added `mgmtPorts` to Custom Resource `Status`.\n- Changed the `version` [channel structure](/apis/datapowerservice/v1beta2#available-channels).\n\n#### `DataPowerMonitor`\n\nSee the API spec [here](/apis/datapowermonitor/v1beta2), and more information on the functionality [here](/features/monitor).\n\n## 1.0.2\n\n- Add support for DataPower firmware version `10.0.0.1`.\n- Add support for DataPower Monitor version `1.0.1`.\n- Add DataPower init script to clean `temporary:///config` on boot.\n\n## 1.0.1\n\n- Several changes and enhancements to support deployment via IBM Cloud Pak for Integration, including:\n  - A minimal `ServiceAccount` is generated for use by the StatefulSet is none is provided in the `DataPowerService` Custom Resource spec.\n  - Support for automatically using an `ibm-entitlement-key` Secret to pull images from the IBM Container Registry.\n  - Labels and Annotations for Licensing and Metering of workloads, both standalone and within IBM Cloud Pak for Integration.\n  - Kibana dashboard support.\n\n## 1.0.0\n\nInitial release.\n","type":"Mdx","contentDigest":"f38cc3319d28e6557ba4d1e2b3bb403b","counter":128,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Release Notes","description":"IBM DataPower Operator release notes"},"exports":{},"rawBody":"---\ntitle: Release Notes\ndescription: IBM DataPower Operator release notes\n---\n\n## 1.2.3\n\n- Add support for DataPower firmware version `10.0.1.3`, available in the `10.0-eus` and `10.0-lts` [channels](/apis/datapowerservice/v1beta2#channels).\n- Conversion webhook management will now upgrade conversion webhook Deployment as part of operator upgrade.\n- Fix split-cluster issue related to gateway-peering in API Connect Gateway deployments.\n- Fix reconciliation of `spec.labels` in `DataPowerService` custom resource instances.\n- Fix `status.mgmtPorts` update behavior when StatefulSet is not `Ready`.\n- Fix DataPower config initialization sequence and behavior.\n- Fix an issue related to capital domain names.\n\n## 1.3.0\n\n### v1beta3 API\n\nThis version brings a new `v1beta3` version of the `DataPowerService` CRD, adding the following capabilities:\n\n- Horizontal and Vertical Pod Autoscaling\n- Kubernetes container lifecycle hooks\n- License acceptance enforcement during upgrade\n- Pause reconciliation for troubleshooting\n\nUpon upgrading to `1.3.0`, any `v1beta2` `DataPowerService` instances will automatically be [migrated](/features/api-migration#v1beta3-migration) to `v1beta3`.\n\nNote that only the `DataPowerService` CRD has updated to `v1beta3`, the `DataPowerMonitor` CRD remains at `v1beta2`.\n\n### Enhancements\n\n- Conversion webhook management will automatically upgrade the conversion webhook runtime when necessary (such as upgrade from `1.2.x` to `1.3.x`).\n- Stricter validation for minimum CPU and Memory allocations for DataPower containers.\n\n### Changes\n\n- Minimum CPU count for DataPower containers has been lowered to `1`.\n  - The default CPU request for nonproduction containers is now `1`.\n  - The default CPU request for production containers remains `4`.\n- DataPowerService CPU request (`spec.resources.requests.cpu`) now supports [Kubernetes resource quantity](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes) formatting.\n  - This means that CPU can be requested using milli-CPU string, such as `4000m` for 4 cores.\n  - Partial CPU values (such as `2500m` are **not** supported).\n\n### Fixes\n\n- Fix ordering of application domain config initialization during DataPower container startup.\n\n## 1.2.2\n\n- Add support for DataPower firmware version `10.0.1.2`.\n- Fix issue relating to `temporary:///` file system cleanup during DataPower pod initialization.\n- Update Go to address CVEs: CVE-2020-28367, CVE-2020-28366, CVE-2020-28362.\n\n## 1.2.1\n\n- Fix Pod Topology Spread Constraints.\n  - Set `topologyKey` to well-known \"zone\" label `topology.kubernetes.io/zone`.\n  - Set `whenUnsatisfiable` to `ScheduleAnyway` to avoid blocked scheduling.\n\n## 1.2.0\n\n### Enhancements\n\n- Add support for `datapower-cp4i` image, see [Image selection](/features/entitled-registry#image-selection) and [Cloud Pak for Integration: Gateway runtime](https://www.ibm.com/support/knowledgecenter/SS9H2Y_10.0/com.ibm.dp.doc/icp4i.html).\n- Add support for DataPower version `10.0.1.1`.\n- Add support for Cloud Pak for Integration 2020.4.1 EUS release.\n- Pod scheduling errors are now raised as `Conditions` on the `DataPowerService` instance.\n\n### Changes\n\n- `DataPowerService` CR names are now limited to 52 characters.\n\n### Deprecated\n\n- `storage.volumeMode` is deprecated, and will now always be set to `Filesystem` for `persistent` storage requests.\n  - If set to `Block` previously, the CR will be migrated to use `Filesystem` instead, automatically.\n\n### Platform\n\n- Minimum OCP version is now 4.6.\n- Minimum Kubernetes version is now 1.17.\n\n## 1.1.1\n\n- Fixes an issue relating to metering and licensing of DataPower Virtual Edition for Nonproduction, when deployed in IBM Cloud Pak for Integration.\n- Fixes an issue relating to the `storage.size` property rendering in OCP Console UI, as well as IBM Cloud Pak for Integration Platform Navigator.\n- Fixes an issue relating to the name generation and reconciliation of the `username-commands` ConfigMap created by the operator.\n- Adds documentation `links` to the `ClusterServiceVersion` for both CRDs, as well as this documentation website.\n- Conversion webhook management routine will now adopt orphaned webhook deployments if found during reconciliation.\n\n## 1.1.0\n\n### v1beta2 APIs\n\n`1.1.0` introduces a new `v1beta2` API version, consisting of an **updated** [`DataPowerService`](/apis/datapowerservice/v1beta2) CustomResourceDefition (CRD), and a **new** [`DataPowerMonitor`](/apis/datapowermonitor/v1beta2) CRD.\n\nFor more details on the (automatic) API migration process, see [API Migration](/features/api-migration).\n\nWith the new `v1beta2` API, the following changes have been made:\n\n#### `DataPowerService`\n\n- Removed `dataPowerMonitor` (replaced by `DataPowerMonitor` CRD).\n- Added support for custom [`tolerations`](/apis/datapowerservice/v1beta2#tolerations).\n- Added support for custom [`nodeSelector`](/apis/datapowerservice/v1beta2#nodeselector).\n- Added `mgmtPorts` to Custom Resource `Status`.\n- Changed the `version` [channel structure](/apis/datapowerservice/v1beta2#available-channels).\n\n#### `DataPowerMonitor`\n\nSee the API spec [here](/apis/datapowermonitor/v1beta2), and more information on the functionality [here](/features/monitor).\n\n## 1.0.2\n\n- Add support for DataPower firmware version `10.0.0.1`.\n- Add support for DataPower Monitor version `1.0.1`.\n- Add DataPower init script to clean `temporary:///config` on boot.\n\n## 1.0.1\n\n- Several changes and enhancements to support deployment via IBM Cloud Pak for Integration, including:\n  - A minimal `ServiceAccount` is generated for use by the StatefulSet is none is provided in the `DataPowerService` Custom Resource spec.\n  - Support for automatically using an `ibm-entitlement-key` Secret to pull images from the IBM Container Registry.\n  - Labels and Annotations for Licensing and Metering of workloads, both standalone and within IBM Cloud Pak for Integration.\n  - Kibana dashboard support.\n\n## 1.0.0\n\nInitial release.\n","fileAbsolutePath":"/home/travis/build/IBM/datapower-operator-doc/src/pages/release-notes/index.mdx"}}}}