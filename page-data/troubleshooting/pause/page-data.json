{"componentChunkName":"component---src-pages-troubleshooting-pause-mdx","path":"/troubleshooting/pause/","result":{"pageContext":{"frontmatter":{"title":"Pause Reconciliation","description":"Troubleshooting guide for pausing DataPowerService reconciliation"},"relativePagePath":"/troubleshooting/pause.mdx","titleType":"page","MdxNode":{"id":"c611bc6e-3994-5071-8988-bf194d024793","children":[],"parent":"706728bb-25c1-524d-8a90-26e5d4d24d26","internal":{"content":"---\ntitle: Pause Reconciliation\ndescription: Troubleshooting guide for pausing DataPowerService reconciliation\n---\n\n<PageDescription>\n\nThe DataPower Operator's reconciliation of the DataPower StatefulSet can be paused, allowing you to modify the StatefulSet directly for troubleshooting purposes.\n\n</PageDescription>\n\n## Background\n\nWhile the `DataPowerService` CRD exposes a handful of helpful troubleshooting capabilities such as init script debugging and lifecycle hooks, there are cases where it's necessary to modify the StatefulSet directly to troubleshoot an issue. This can lead to conflict with the DataPower Operator's reconciliation of the StatefulSet, because any changes made to the StatefulSet directly can be overwritten by the operator.\n\n## Pausing reconciliation\n\nTo pause reconciliation of the `DataPowerService` custom resource, and the owned StatefulSet, an annotation can be added to the `DataPowerService` instance. There are two mechanisms supported: auto-expiring pause and indefinite pause.\n\nBoth pause mechanisms use the same annotation key: `datapower.ibm.com/pause`. The difference in their behavior is determined by the value specified in the annotation.\n\n### Auto-expiring pause\n\nReconciliation can be paused for a duration of time, after which the pause will lift automatically. Once the time duration expires, the pause annotation is automatically removed by the operator and reconciliation of the StatefulSet will resume automatically.\n\nThe syntax for specifying an auto-expiring pause is as follows:\n\n```yaml\napiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  annotations:\n    datapower.ibm.com/pause: <duration>\n```\n\nwhere `<duration>` is a sequence of decimal numbers with time unit suffix.\n\nValid time units are `s`, `m`, `h`. Some examples:\n\n- `10m` would pause for 10 minutes\n- `120s` would pause for 120 seconds\n- `1h30m` would pause for 1 hour 30 minutes\n\n<InlineNotification>\n\nThe minimum duration that reconciliation can be paused is 1 minute.\n\n</InlineNotification>\n\nOnce the `datapower.ibm.com/pause` annotation is added, the operator will generate a second annotation that indicates the expiration timestamp. Below is an example of an instance that has been paused for 10 minutes, and has the `pause-expiration` timestamp added.\n\n```yaml\napiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  annotations:\n    datapower.ibm.com/pause: 10m\n    datapower.ibm.com/pause-expiration: \"2021-03-03T20:41:32Z\"\n```\n\n<InlineNotification>\n\nNote that once the `pause-expiration` timestamp passes, **both** pause annotations are automatically removed by the operator.\n\n</InlineNotification>\n\nDuring the time period that reconciliation is paused, a `Warning` condition will be raised on the `DataPowerService` instance, for example:\n\n```yaml\nstatus:\n  conditions:\n  - lastTransitionTime: \"2021-03-03T20:31:33Z\"\n    message: Reconciliation is paused until 2021-03-03T20:41:32Z\n    reason: ReconcileWarning\n    status: \"True\"\n    type: Warning\n```\n\n### Indefinite pause\n\nReconciliation can be paused indefinitely, meaning that the user must manually remove the annotation to resume normal operation. Once the annotation is removed by the user, reconciliation of the StatefulSet resumes normally.\n\nThe syntax for specifying an indefinite pause is as follows:\n\n```yaml\napiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  annotations:\n    datapower.ibm.com/pause: \"true\"\n```\n\n<InlineNotification type=\"warning\">\n\nThe value **must** be a string, i.e. `\"true\"`, just providing `true` will not work and you will receive an error when trying to apply the update.\n\n</InlineNotification>\n\nOnce this annotation is added, reconciliation will be paused indefinitely, until the annotation is removed by the user. During this time, a `Warning` condition will be raised on the `DataPowerService` instance indicating the status:\n\n```yaml\nstatus:\n  conditions:\n  - lastTransitionTime: \"2021-03-03T20:43:45Z\"\n    message: Reconciliation is paused indefinitely\n    reason: ReconcileWarning\n    status: \"True\"\n    type: Warning\n```","type":"Mdx","contentDigest":"7fe53c19845517d155e5a9342c447596","counter":135,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Pause Reconciliation","description":"Troubleshooting guide for pausing DataPowerService reconciliation"},"exports":{},"rawBody":"---\ntitle: Pause Reconciliation\ndescription: Troubleshooting guide for pausing DataPowerService reconciliation\n---\n\n<PageDescription>\n\nThe DataPower Operator's reconciliation of the DataPower StatefulSet can be paused, allowing you to modify the StatefulSet directly for troubleshooting purposes.\n\n</PageDescription>\n\n## Background\n\nWhile the `DataPowerService` CRD exposes a handful of helpful troubleshooting capabilities such as init script debugging and lifecycle hooks, there are cases where it's necessary to modify the StatefulSet directly to troubleshoot an issue. This can lead to conflict with the DataPower Operator's reconciliation of the StatefulSet, because any changes made to the StatefulSet directly can be overwritten by the operator.\n\n## Pausing reconciliation\n\nTo pause reconciliation of the `DataPowerService` custom resource, and the owned StatefulSet, an annotation can be added to the `DataPowerService` instance. There are two mechanisms supported: auto-expiring pause and indefinite pause.\n\nBoth pause mechanisms use the same annotation key: `datapower.ibm.com/pause`. The difference in their behavior is determined by the value specified in the annotation.\n\n### Auto-expiring pause\n\nReconciliation can be paused for a duration of time, after which the pause will lift automatically. Once the time duration expires, the pause annotation is automatically removed by the operator and reconciliation of the StatefulSet will resume automatically.\n\nThe syntax for specifying an auto-expiring pause is as follows:\n\n```yaml\napiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  annotations:\n    datapower.ibm.com/pause: <duration>\n```\n\nwhere `<duration>` is a sequence of decimal numbers with time unit suffix.\n\nValid time units are `s`, `m`, `h`. Some examples:\n\n- `10m` would pause for 10 minutes\n- `120s` would pause for 120 seconds\n- `1h30m` would pause for 1 hour 30 minutes\n\n<InlineNotification>\n\nThe minimum duration that reconciliation can be paused is 1 minute.\n\n</InlineNotification>\n\nOnce the `datapower.ibm.com/pause` annotation is added, the operator will generate a second annotation that indicates the expiration timestamp. Below is an example of an instance that has been paused for 10 minutes, and has the `pause-expiration` timestamp added.\n\n```yaml\napiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  annotations:\n    datapower.ibm.com/pause: 10m\n    datapower.ibm.com/pause-expiration: \"2021-03-03T20:41:32Z\"\n```\n\n<InlineNotification>\n\nNote that once the `pause-expiration` timestamp passes, **both** pause annotations are automatically removed by the operator.\n\n</InlineNotification>\n\nDuring the time period that reconciliation is paused, a `Warning` condition will be raised on the `DataPowerService` instance, for example:\n\n```yaml\nstatus:\n  conditions:\n  - lastTransitionTime: \"2021-03-03T20:31:33Z\"\n    message: Reconciliation is paused until 2021-03-03T20:41:32Z\n    reason: ReconcileWarning\n    status: \"True\"\n    type: Warning\n```\n\n### Indefinite pause\n\nReconciliation can be paused indefinitely, meaning that the user must manually remove the annotation to resume normal operation. Once the annotation is removed by the user, reconciliation of the StatefulSet resumes normally.\n\nThe syntax for specifying an indefinite pause is as follows:\n\n```yaml\napiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  annotations:\n    datapower.ibm.com/pause: \"true\"\n```\n\n<InlineNotification type=\"warning\">\n\nThe value **must** be a string, i.e. `\"true\"`, just providing `true` will not work and you will receive an error when trying to apply the update.\n\n</InlineNotification>\n\nOnce this annotation is added, reconciliation will be paused indefinitely, until the annotation is removed by the user. During this time, a `Warning` condition will be raised on the `DataPowerService` instance indicating the status:\n\n```yaml\nstatus:\n  conditions:\n  - lastTransitionTime: \"2021-03-03T20:43:45Z\"\n    message: Reconciliation is paused indefinitely\n    reason: ReconcileWarning\n    status: \"True\"\n    type: Warning\n```","fileAbsolutePath":"/home/travis/build/IBM/datapower-operator-doc/src/pages/troubleshooting/pause.mdx"}}}}