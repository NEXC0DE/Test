{"version":3,"sources":["webpack:///./src/pages/guides/operand-status.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,KAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,6HAEF,kDACA,uDAAsC,sBAAQC,WAAW,KAAnB,YAAtC,uGAA0L,0BAAYA,WAAW,KAAvB,oBAA1L,2CAAkS,0BAAYA,WAAW,KAAvB,oBAAlS,8DAA6Z,0BAAYA,WAAW,KAAvB,UAA7Z,qBAAqe,0BAAYA,WAAW,KAAvB,UAAre,uJACA,kCAAiB,0BAAYA,WAAW,KAAvB,oBAAjB,0GAAwL,0BAAYA,WAAW,KAAvB,oBAAxL,iEAAsT,mBAAGA,WAAW,KAAQ,CACxU,KAAQ,6CAD0S,qBAAtT,KAGA,2CACA,0CACA,kDAAiC,0BAAYA,WAAW,KAAvB,oBAAjC,+CAA6I,0BAAYA,WAAW,KAAvB,OAA7I,OAAoM,0BAAYA,WAAW,KAAvB,cAApM,KACA,YAACP,EAAD,CAAoBM,QAAQ,sBAC1B,qBAAG,sBAAQC,WAAW,KAAnB,SAAH,+BAA4E,0BAAYA,WAAW,KAAvB,MAA5E,qDAAgL,0BAAYA,WAAW,KAAvB,WAAhL,MAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8HAQL,4BAAW,0BAAYA,WAAW,KAAvB,oBAAX,+BAAuG,0BAAYA,WAAW,KAAvB,MAAvG,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kGAQL,0CACA,kDAAiC,0BAAYA,WAAW,KAAvB,oBAAjC,mCAAiI,0BAAYA,WAAW,KAAvB,oBAAjI,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,8HAQL,4BAAW,0BAAYA,WAAW,KAAvB,oBAAX,+BAAuG,0BAAYA,WAAW,KAAvB,OAAvG,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,oGAQL,oCACA,4JAA2I,0BAAYA,WAAW,KAAvB,OAA3I,YACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,QACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,SACpB,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,iBAEtB,kEAAiD,0BAAYA,WAAW,KAAvB,mBAAjD,UAAuH,0BAAYA,WAAW,KAAvB,YAAvH,yBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,+DAOL,kDACA,wCAAuB,0BAAYA,WAAW,KAAvB,aAAvB,uEAAoJ,0BAAYA,WAAW,KAAvB,SAApJ,kBACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mLAIL,yEAAwD,0BAAYA,WAAW,KAAvB,YAAxD,uEAAoL,0BAAYA,WAAW,KAAvB,QAApL,2BAAgQ,0BAAYA,WAAW,KAAvB,YAAhQ,8BAAmV,0BAAYA,WAAW,KAAvB,UAAnV,uEACA,4EAA2D,0BAAYA,WAAW,KAAvB,UAA3D,gCACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iEADQ,4BAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iEADQ,8BAQ1BH,EAAWI,gBAAiB","file":"component---src-pages-guides-operand-status-mdx-9fa8efca60839ab66d9a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Once deployed, an operand’s status is available via the Custom Resources that compose the workload.`}</p>\n    </PageDescription>\n    <h2>{`Operand Custom Resources`}</h2>\n    <p>{`The DataPower Operator manages `}<strong parentName=\"p\">{`operands`}</strong>{`, e.g. IBM DataPower Gateway pods, through its Custom Resources. The primary Custom Resource is the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` CustomResourceDefinition (CRD). When a `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` instance is created, the DataPower Operator will keep its `}<inlineCode parentName=\"p\">{`Status`}</inlineCode>{` up-to-date. This `}<inlineCode parentName=\"p\">{`Status`}</inlineCode>{` can contain valuable information regarding the workload’s state, including the status of an update rollout, any errors during reconciliation, etc.`}</p>\n    <p>{`While the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` instance is the primary instance for checking the status of the IBM DataPower Gateway deployment, the `}<inlineCode parentName=\"p\">{`DataPowerMonitor`}</inlineCode>{` instance is also a valuable component. For more details, see `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/features/monitor\"\n      }}>{`DataPower Monitor`}</a>{`.`}</p>\n    <h2>{`Retrieving status`}</h2>\n    <h3>{`DataPowerService`}</h3>\n    <p>{`You can interact with the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` resource type similarly to how you would a `}<inlineCode parentName=\"p\">{`Pod`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`Deployment`}</inlineCode>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` The below examples use the `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` CLI; however, the same commands should work with `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# list DataPowerService instances\noc get datapowerservice\n\n# describe one of them\noc describe datapowerservice/name\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` also supports a shortname, `}<inlineCode parentName=\"p\">{`dp`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# list DataPowerService instances\noc get dp\n\n# describe one of them\noc describe dp/name\n`}</code></pre>\n    <h3>{`DataPowerMonitor`}</h3>\n    <p>{`You can interact with the `}<inlineCode parentName=\"p\">{`DataPowerMonitor`}</inlineCode>{` resource type similarly to the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# list DataPowerMonitor instances\noc get datapowermonitor\n\n# describe one of them\noc describe datapowermonitor/name\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`DataPowerMonitor`}</inlineCode>{` also supports a shortname, `}<inlineCode parentName=\"p\">{`dpm`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`# list DataPowerMonitor instances\noc get dpm\n\n# describe one of them\noc describe dpm/name\n`}</code></pre>\n    <h3>{`Categories`}</h3>\n    <p>{`All CRDs that the DataPower Operator manages will be included in the following categories, allowing for it to show up in aggregated `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` output:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`all`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`apic`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cp4i`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`integration`}</inlineCode></li>\n    </ul>\n    <p>{`To list these categories of resources use `}<inlineCode parentName=\"p\">{`oc get category`}</inlineCode>{` where `}<inlineCode parentName=\"p\">{`category`}</inlineCode>{` is one of the above.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`oc get all\noc get apic\noc get cp4i\noc get integration\n`}</code></pre>\n    <h2>{`Understanding the output`}</h2>\n    <p>{`The output from `}<inlineCode parentName=\"p\">{`oc get dp`}</inlineCode>{` will show at a glance if the IBM DataPower Gateway instance(s) are `}<inlineCode parentName=\"p\">{`Ready`}</inlineCode>{`. For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ oc get dp\nNAME        PHASE     READY   SUMMARY                           VERSION    AGE\nexample     Running   True    StatefulSet replicas ready: 3/3   10.0.1.0   171m\n`}</code></pre>\n    <p>{`Similarly to other Kubernetes resources, you can `}<inlineCode parentName=\"p\">{`describe`}</inlineCode>{` the custom resource for more verbose status (as well as to see its `}<inlineCode parentName=\"p\">{`spec`}</inlineCode>{`). At the bottom of the `}<inlineCode parentName=\"p\">{`describe`}</inlineCode>{` output, you will find the `}<inlineCode parentName=\"p\">{`Status`}</inlineCode>{` section. This contains conditions and other custom status entries.`}</p>\n    <p>{`To read more about the available information in the `}<inlineCode parentName=\"p\">{`Status`}</inlineCode>{` sections for each CRD, see:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta2#status\"\n        }}>{`DataPowerService Status`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowermonitor/v1beta2#status\"\n        }}>{`DataPowerMonitor Status`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}