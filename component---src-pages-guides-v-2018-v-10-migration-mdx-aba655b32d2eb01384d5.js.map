{"version":3,"sources":["webpack:///./src/pages/guides/v2018-v10-migration.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","small","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-guides-v-2018-v-10-migration-mdx-aba655b32d2eb01384d5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This guide provides steps to migrate an existing (Helm based) v2018 IBM DataPower deployment to a v10 IBM DataPower deployment, using the IBM DataPower Operator.`}</p>\n    </PageDescription>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Prerequisites</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Overview</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 1: Update v2018 with Migration Labels</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 2: Deploy v10</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 3: Edit Services to Select on Migration Labels</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 4: Scale down v2018; Scale up v10</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 5: Delete Helm installation</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 6: Edit Service to Select only v10</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Step 7: Remove Migration Labels from v10</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Prerequisites`}</h2>\n    <p>{`This migration document assumes that a user has all v10 resources ready to deploy. Specifically, it assumes the following prerequistes:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A v2018 Helm deployment of IBM DataPower`}</li>\n      <li parentName=\"ul\">{`An IBM DataPower Operator deployed watching the relevant namespace`}</li>\n      <li parentName=\"ul\">{`A functionally equivalent v10 `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` Custom Resource`}</li>\n      <li parentName=\"ul\">{`All relevant ConfigMaps and Secrets have been created`}</li>\n    </ul>\n    <h2>{`Overview`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Update v2018 Deployment with “migration labels”`}</li>\n      <li parentName=\"ol\">{`Create `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` Custom Resource in namespace with single replica and “migration labels”`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`If resources are constrained, scale the v2018 deployment down by 1 replica`}</li>\n        </ul></li>\n      <li parentName=\"ol\">{`Edit Service(s) to change Label Selectors to match “migration labels”`}</li>\n      <li parentName=\"ol\">{`Scale down v2018 and scale up v10 1 replica at a time`}</li>\n      <li parentName=\"ol\">{`Uninstall Helm deployment`}</li>\n      <li parentName=\"ol\">{`Edit Service(s) to change Label Selectors from “migration labels” to v10 labels`}</li>\n      <li parentName=\"ol\">{`Remove “migration labels” from v10 StatefulSet`}</li>\n    </ol>\n    <h2>{`Step 1: Update v2018 with Migration Labels`}</h2>\n    <p>{`To perform a side-by-side migration from Helm managed v2018 to Operator managed v10, you must bridge the gap with “migration labels.” These labels will be used to connect the v2018 and v10 Pods to the same API traffic via the relevant Services while scaling operations are performed. To add the label, you can edit the Deployment or StatefulSet directly:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl edit Deployment v2018-ibm-datapower-dev\n`}</code></pre>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`v2018-ibm-datapower-dev`}</inlineCode>{` is the name of your v2018 Deployment.`}</p>\n    <p>{`The labels section of your Deployment yaml should look similar to:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/instance: v2018\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/name: v2018-ibm-datapower-dev\n        helm.sh/chart: ibm-datapower-dev-3.0.5\n        release: v2018\n`}</code></pre>\n    <p>{`You will now add a label, `}<inlineCode parentName=\"p\">{`v2018.v10.datapower.migration: <release-name>`}</inlineCode>{` where `}<inlineCode parentName=\"p\">{`<release-name>`}</inlineCode>{` is the name of this release. This new label will be the intermediary Selector for the Services handling your traffic. The purpose of `}<inlineCode parentName=\"p\">{`<release-name>`}</inlineCode>{` is to ensure uniqueness so that your Service doesn’t send traffic to another Deployment with an on-going migration. Using the above example labels, your new label set should look like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/instance: v2018\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/name: v2018-ibm-datapower-dev\n        helm.sh/chart: ibm-datapower-dev-3.0.5\n        release: v2018\n        v2018.v10.datapower.migration: v2018\n`}</code></pre>\n    <p>{`Now save and exit your editor, which should prompt an update of the v2018 Deployment. This will cause a Rolling Update (default) and you should wait until all pods are back up before proceeding to the next step.`}</p>\n    <h2>{`Step 2: Deploy v10`}</h2>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` If resources are constrained, first decrease the number of v2018 replicas by 1 and initially configure your DataPowerService yaml to have 1 replica. This will ensure no increase in resource usage.`}</p>\n    </InlineNotification>\n    <p>{`Now we need to install the v10 StatefulSet. A prerequisite for this guide is to have built a DataPowerService CustomResource yaml that configures the same APIs as your v2018 deployment. Before installing this custom resource, you need to add the “migration labels” to it. To do so, add the following to your custom resource yaml:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  labels:\n    v2018.v10.datapower.migration: <v2018-release-name>\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`It is important to use the v2018 release name as the value for the migration label so the Service can send traffic to both v2018 and v10 Pods.`}</p>\n    </InlineNotification>\n    <p>{`With the migration label in place, install the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` resource.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl apply -f datapowerservice.yaml\n`}</code></pre>\n    <p>{`Wait for a minute for the Pods to come up. Once up, you can inspect the labels.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl describe pod <v10-pod>\n`}</code></pre>\n    <p>{`The labels on the v10 pod should resemble:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`Labels:       app.kubernetes.io/component=datapower\n              app.kubernetes.io/instance=test-v10-datapower\n              app.kubernetes.io/managed-by=datapower-operator\n              app.kubernetes.io/name=datapower\n              app.kubernetes.io/version=10.0.0.0\n              controller-revision-hash=v10-datapower-9fdb8f499\n              v2018.v10.datapower.migration=v2018\n`}</code></pre>\n    <p>{`Note that now you have a common label on both v2018 and v10 Pods. This allows us to edit any Service objects to send traffic to both sets of Pods.`}</p>\n    <h2>{`Step 3: Edit Services to Select on Migration Labels`}</h2>\n    <p>{`With the labels in place, it’s time to edit the relevant service(s) to `}<inlineCode parentName=\"p\">{`Select`}</inlineCode>{` using the “migration label” instead of previous Selectors.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`You will need to do this for each and every existing `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` that routes traffic to your v2018 deployment.`}</p>\n    </InlineNotification>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl edit Service <v2018-service>\n`}</code></pre>\n    <p>{`In your editor, you can find the below `}<inlineCode parentName=\"p\">{`selector`}</inlineCode>{` section.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  selector:\n    app.kubernetes.io/name: v2018-ibm-datapower-dev\n`}</code></pre>\n    <p>{`This selector will need to change to the migration label:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  selector:\n    v2018.v10.datapower.migration: v2018\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`Note: You should remove `}<strong parentName=\"p\">{`all`}</strong>{` of the existing labels, such that the `}<inlineCode parentName=\"p\">{`v2018.v10.datapower.migration`}</inlineCode>{` is the only remaining selector label.`}</p>\n    </InlineNotification>\n    <p>{`Save and exit the editor. The Service will now be pointing at both the v2018 and v10 Pods.`}</p>\n    <h2>{`Step 4: Scale down v2018; Scale up v10`}</h2>\n    <p>{`With the traffic handling Service pointing at both v10 and v2018 pods, you can now safely scale down v2018 while scaling up v10.`}</p>\n    <p>{`To scale down v2018, edit the Deployment/Statefulset and decrease the `}<inlineCode parentName=\"p\">{`spec.replicas`}</inlineCode>{` by 1.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl edit Deployment v2018-ibm-datapower-dev\n`}</code></pre>\n    <p>{`To scale up v10, edit the DataPowerService resource and increase the `}<inlineCode parentName=\"p\">{`spec.replicas`}</inlineCode>{` by 1.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl edit datapowerservice v10-datapower\n`}</code></pre>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Note:`}</strong>{` It is important that you edit the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` resource instead of the v10 StatefulSet directly, as the Operator will override the changes you make.`}</p>\n    </InlineNotification>\n    <p>{`Continue to scale down v2018 and scale up v10 until there are no more v2018 Pods. Between each iteration, wait for the new v10 pod to become `}<inlineCode parentName=\"p\">{`Ready`}</inlineCode>{`.`}</p>\n    <h2>{`Step 5: Delete Helm installation (Optional)`}</h2>\n    <p>{`If ability to Rollback isn’t required, you can delete the Helm installation at this stage.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`helm delete --purge v2018\n`}</code></pre>\n    <h2>{`Step 6: Edit Service to Select only v10`}</h2>\n    <p>{`With the v2018 deployment fully scaled down, you can change the Service selectors to be v10 specific.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl edit Service <v2018-service>\n`}</code></pre>\n    <p>{`Your updated selector labels should look something like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`spec:\n  selector:\n    app.kubernetes.io/name: datapower\n    app.kubernetes.io/instance: test-v10-datapower\n`}</code></pre>\n    <h2>{`Step 7: Remove Migration Labels from v10 (Optional)`}</h2>\n    <p>{`If desired, clean up the v10 StatefulSet by removing the custom migration label from the Custom Resource.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl edit datapowerservice v10-datapower\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}