{"version":3,"sources":["webpack:///./src/pages/guides/workload-rollbacks.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,YAACO,EAAD,KAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAG5E,YAACR,EAAD,CAAiBQ,QAAQ,mBACvB,oDAAmC,mBAAGC,WAAW,KAAQ,CACrD,KAAQ,2EADuB,eAAnC,gJAIF,YAACR,EAAD,CAAaO,QAAQ,eACvB,YAACN,EAAD,CAAYM,QAAQ,cAApB,mBACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,mCACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,yBACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,oBAEE,yCACA,2EAA0D,0BAAYC,WAAW,KAAvB,iBAA1D,kKAAsR,mBAAGA,WAAW,KAAQ,CACxS,KAAQ,2FAD0Q,mBAAtR,+CAGA,yDACA,6FAA4E,0BAAYA,WAAW,KAAvB,oBAA5E,kEAA2M,0BAAYA,WAAW,KAAvB,OAA3M,oEACA,+CACA,gFACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,6EAAiG,0BAAYA,WAAW,KAAvB,OAAjG,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sBAA0C,0BAAYA,WAAW,KAAvB,YAA1C,OAAsG,0BAAYA,WAAW,KAAvB,iBAAtG,yBAGJ,iCACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,8YAcL,yCACA,sDAAqC,0BAAYA,WAAW,KAAvB,oBAArC,uJAAyP,mBAAGA,WAAW,KAAQ,CAC3Q,KAAQ,2FAD6O,mBAAzP,iBAOJH,EAAWI,gBAAiB","file":"component---src-pages-guides-workload-rollbacks-mdx-b7c14821036e0fc7d518.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The DataPowerService uses a `}<a parentName=\"p\" {...{\n          \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\"\n        }}>{`StatefulSet`}</a>{` to manage the DataPower Pods it deploys. We recommend versioning your Custom Resource YAML to enable rolling back changes youâ€™ve deployed.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Rolling Updates</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Versioning your Custom Resource</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Rolling back a change</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Forced Rollback</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Rolling Updates`}</h2>\n    <p>{`The default update strategy for the StatefulSet is `}<inlineCode parentName=\"p\">{`RollingUpdate`}</inlineCode>{`. This ensures ordered and graceful deployment and scaling of the workload when changes are made. We recommend reading through the Kubernetes documentation on `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#rolling-updates\"\n      }}>{`Rolling Updates`}</a>{` to understand this concept in more detail.`}</p>\n    <h2>{`Versioning your Custom Resource`}</h2>\n    <p>{`We recommend as a best practice that you should version control your `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource YAMLs. Using a version control system such as `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`, you can easily revert changes you make to your configurations.`}</p>\n    <h2>{`Rolling back a change`}</h2>\n    <p>{`To roll back a given change, the process is as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Revert to the desired configuration using version control system, such as `}<inlineCode parentName=\"p\">{`git`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Apply change using `}<inlineCode parentName=\"p\">{`oc apply`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`kubectl apply`}</inlineCode>{` with desired YAML.`}</p>\n      </li>\n    </ol>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`# apply change\noc apply -f my-config.yaml\n\n# check status, find that deployment is unstable\noc describe dp/my-resource\n\n# decide to roll back the change, revert yaml locally using version control\n# this can be accomplished a number a ways, some examples are:\ngit revert <last-commit>\ngit checkout <stable-tag>\n\n# apply working yaml to roll back changes\noc apply -f my-config.yaml\n`}</code></pre>\n    <h2>{`Forced Rollback`}</h2>\n    <p>{`If a change is applied to the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource that puts the StatefulSet into a failed state, in which a rolling update does not complete successfully, you may need to perform a `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#forced-rollback\"\n      }}>{`Forced Rollback`}</a>{` to recover.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}