{"version":3,"sources":["webpack:///./src/pages/troubleshooting/stale-webhooks.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-troubleshooting-stale-webhooks-mdx-950fdf4a48b695151ce8.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The DataPower Operator implements and uses `}<a parentName=\"p\" {...{\n          \"href\": \"https://kubernetes.io/docs/reference/access-authn-authz/admission-controllers/\"\n        }}>{`Kubernetes Admission Controllers`}</a>{` for validating and defaulting `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` requests.`}</p>\n    </PageDescription>\n    <h2>{`Background`}</h2>\n    <p>{`During the DataPower Operator pod’s boot sequence, it will attempt to fetch and/or create several Kubernetes resources for the validating and defaulting webhooks. These resources include:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Secret`}</inlineCode>{` containing TLS key/cert for webhook API`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Service`}</inlineCode>{` to expose the webhook API`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`MutatingWebhookConfiguration`}</inlineCode>{` for the defaulting webhook`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ValidatingWebhookConfiguration`}</inlineCode>{` for the validating webhook`}</li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Secret`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` are owned by the DataPower Operator’s `}<inlineCode parentName=\"p\">{`ReplicaSet`}</inlineCode>{`, and thus share the same life cycle as the operator pod itself. However, the two webhook configurations are cluster-scope resources, and are instead owned by the operator’s `}<inlineCode parentName=\"p\">{`ClusterRole`}</inlineCode>{`. The expectation is that the `}<inlineCode parentName=\"p\">{`ClusterRole`}</inlineCode>{` shares the same life cycle as the DataPower Operator, but there are cases where this life cycle can be broken, leading to a mismatch between the TLS key/cert referenced by the configurations, and the TLS key/cert being used by the current operator pod.`}</p>\n    <h2>{`Problem determination`}</h2>\n    <p>{`If you see errors relating to `}<strong parentName=\"p\">{`bad certificate`}</strong>{` or `}<strong parentName=\"p\">{`x509 certificate validation`}</strong>{` being logged in the DataPower Operator pod, you are most likely seeing this issue. Some examples are shown below to assist with problem determination.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`2020/05/05 04:13:22 http: TLS handshake error from x.x.x.x:57076: remote error: tls: bad certificate\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`Internal error occurred: failed calling webhook \"datapowerservices.defaulter.datapower.ibm.com\": Post https://datapower-operator.namespace.svc:443/default-datapower-ibm-com-v1beta2-datapowerservice?timeout=2s: x509: certificate signed by unknown authority (possibly because of \"crypto/rsa: verification error\" while trying to verify candidate authority certificate \"datapower-operator-ca\")\n`}</code></pre>\n    <h2>{`Resolution`}</h2>\n    <p>{`To recover from this state, both the `}<inlineCode parentName=\"p\">{`MutatingWebhookConfiguration`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`ValidatingWebhookConfiguration`}</inlineCode>{` configurations need to be manually deleted, and then recreated by the DataPower Operator. At a high-level, this process will be the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Delete stale `}<inlineCode parentName=\"li\">{`MutatingWebhookConfiguration`}</inlineCode>{` resource`}</li>\n      <li parentName=\"ol\">{`Delete stale `}<inlineCode parentName=\"li\">{`ValidatingWebhookConfiguration`}</inlineCode>{` resource`}</li>\n      <li parentName=\"ol\">{`Delete `}<inlineCode parentName=\"li\">{`datapower-operator`}</inlineCode>{` Pod`}</li>\n    </ol>\n    <p>{`When the `}<inlineCode parentName=\"p\">{`datapower-operator`}</inlineCode>{` Pod is deleted, it will automatically be recreated by the Deployment, and the newly created Pod will recreate the webhook configuration resources.`}</p>\n    <h3>{`Steps to Recover`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fetch the `}<inlineCode parentName=\"p\">{`MutatingWebhookConfiguration`}</inlineCode>{` resource from the cluster, taking note of the name (will be the first column in the output).`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl get MutatingWebhookConfiguration | grep datapower.ibm.com\n`}</code></pre>\n        <InlineNotification mdxType=\"InlineNotification\">\n          <p parentName=\"li\">{`Note that if you are on a shared cluster, there may be multiple results from the above command, as there could be several instances of the DataPower Operator deployed across the cluster.`}</p>\n        </InlineNotification>\n        <p parentName=\"li\">{`If you need to filter down further, you can filter by the `}<inlineCode parentName=\"p\">{`namespace`}</inlineCode>{` you’ve deployed the DataPower Operator in. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl get MutatingWebhookConfiguration | grep datapower.ibm.com | grep namespace\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Delete the `}<inlineCode parentName=\"p\">{`MutatingWebhookConfiguration`}</inlineCode>{` resource, where `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` is the name found in Step 1.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl delete MutatingWebhookConfiguration/name\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fetch the `}<inlineCode parentName=\"p\">{`ValidatingWebhookConfiguration`}</inlineCode>{` resource from the cluster, taking note of the name (will be the first column in the output).`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl get ValidatingWebhookConfiguration | grep datapower.ibm.com\n`}</code></pre>\n        <InlineNotification mdxType=\"InlineNotification\">\n          <p parentName=\"li\">{`Note that if you are on a shared cluster, there may be multiple results from the above command, as there could be several instances of the DataPower Operator deployed across the cluster.`}</p>\n        </InlineNotification>\n        <p parentName=\"li\">{`If you need to filter down further, you can filter by the `}<inlineCode parentName=\"p\">{`namespace`}</inlineCode>{` you’ve deployed the DataPower Operator in. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl get ValidatingWebhookConfiguration | grep datapower.ibm.com | grep namespace\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Delete the `}<inlineCode parentName=\"p\">{`ValidatingWebhookConfiguration`}</inlineCode>{` resource, where `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` is the name found in Step 3.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl delete ValidatingWebhookConfiguration/name\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fetch the DataPower Operator pod, taking note of the name (will be the first column in the output).`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl [-n namespace] get pod | grep datapower-operator\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Delete the DataPower Operator pod, where `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` is the name of the pod found in Step 5.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl [-n namespace] delete pod/name\n`}</code></pre>\n      </li>\n    </ol>\n    <p>{`The DataPower Operator’s ReplicaSet will schedule a new Pod, which will create all the resources in the cluster again in a clean state.`}</p>\n    <h2>{`Further Troubleshooting`}</h2>\n    <p>{`If you continue to see issues after following the above steps, please engage IBM Support.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}