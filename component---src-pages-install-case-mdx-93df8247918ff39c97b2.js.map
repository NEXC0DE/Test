{"version":3,"sources":["webpack:///./src/pages/install/case.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","small","isMDXComponent"],"mappings":"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","file":"component---src-pages-install-case-mdx-93df8247918ff39c97b2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/IBM/case\"\n        }}>{`Container Application Software for Enterprises (CASE)`}</a>{` provides a common packaging definition for the many ways to install, manage, operate, upgrade, and uninstall complex software using multiple roles and personas.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Prerequisites</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">CASE inventory</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">datapowerOperator actions</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Prerequisites`}</h2>\n    <p>{`To install the CASE, you must have:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Downloaded the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/cloud-pak/tree/master/repo/case\"\n        }}>{`ibm-datapower-operator CASE bundle`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Installed the `}<inlineCode parentName=\"li\">{`cloudctl`}</inlineCode>{` `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/cloud-pak-cli/releases\"\n        }}>{`tool v3.9.0+`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`An OCP 4.6+ cluster.`}</li>\n    </ul>\n    <h2>{`CASE inventory`}</h2>\n    <p>{`The IBM CASE structure has a concept of inventory items. These items are discrete sets of functionality; installing the DataPower Operator, for example. The DataPower Operator CASE has two primary inventory items: `}<inlineCode parentName=\"p\">{`datapowerOperator`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`kibanaDashboard`}</inlineCode>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`datapowerOperator`}</inlineCode>{` inventory item contains multiple scripted installation actions to install and uninstall the Operator either with OLM or using standard Kubernetes objects (Deployments). There are additional actions for configuring your cluster to support air-gapped installation of the Operator and DataPower Firmware. The `}<inlineCode parentName=\"p\">{`kibanaDashboard`}</inlineCode>{` item simply contains the dashboard json along with instructions for importing it in the README.`}</p>\n    <p>{`The DataPower Operator CASE also contains a set of DataPower Operand inventory items which allow for the selection of the correct DataPower Operand for your license type during installation.`}</p>\n    <h2>{`datapowerOperator actions`}</h2>\n    <p>{`Prior to running any actions for `}<inlineCode parentName=\"p\">{`datapowerOperator`}</inlineCode>{`, you `}<strong parentName=\"p\">{`must`}</strong>{` save the CASE bundle:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case save \\\\\n  --case /path/to/case \\\\\n  --outputdir /tmp/cases\n`}</code></pre>\n    <p>{`The above command will distill the CASE into various artifacts contained in `}<inlineCode parentName=\"p\">{`/tmp/cases`}</inlineCode>{` for processing by the actions.`}</p>\n    <p>{`Available datapowerOperator actions, in the order they would typically be run:`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">1. configure-creds-airgap</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">2. init-registry</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">3. start-registry</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">4. mirror-images</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">5. stop-registry</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">6. configure-cluster-airgap</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">7. install-catalog</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">8. install-operator</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">9. uninstall-operator</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">10. uninstall-catalog</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">11. install-operator-native</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">12. uninstall-operator-native</AnchorLink>\n    </AnchorLinks>\n    <h2>{`1. `}<inlineCode parentName=\"h2\">{`configure-creds-airgap`}</inlineCode></h2>\n    <p>{`Configure credentials for airgap installation.`}</p>\n    <p>{`Run this action to save the credentials needed for the target and source container image registries. This command will be run twice, once for the source and once for the target.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--registry               : source/target container image registry (required)\n--user                   : login user name for the container image registry (required)\n--pass                   : login password for the container image registry (required)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action configure-creds-airgap \\\\\n  --args \"--registry $SOURCE_REGISTRY --user $SOURCE_REGISTRY_USER --pass $SOURCE_REGISTRY_PASS\"\n\ncloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action configure-creds-airgap \\\\\n  --args \"--registry $TARGET_REGISTRY --user $TARGET_REGISTRY_USER --pass $TARGET_REGISTRY_PASS\"\n`}</code></pre>\n    <p>{`Where:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$SOURCE_REGISTRY`}</inlineCode>{` is the URL of the source image registry, i.e. `}<inlineCode parentName=\"li\">{`docker.io`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$TARGET_REGISTRY`}</inlineCode>{` is the URL of the internal image registry which will host the mirrored images.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$SOURCE_REGISTRY_USER`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`$TARGET_REGISTRY_USER`}</inlineCode>{` are the usernames for the respective registries.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`$SOURCE_REGISTRY_PASS`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`$TARGET_REGISTRY_PASS`}</inlineCode>{` are the passwords for the respective registries.`}</li>\n    </ul>\n    <h2>{`2. `}<inlineCode parentName=\"h2\">{`init-registry`}</inlineCode></h2>\n    <p>{`Initialize a Docker registry locally.`}</p>\n    <p>{`This action will setup a Docker registry on your localhost. This is intended to be used as a staging area for image-mirroring before physically migrating the registry behind your firewall.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--user                   : login user name for the container image registry\n--pass                   : login password for the container image registry\n--dir                    : local directory for the docker registry (default: /tmp/docker-registry)\n--subject                : self-sign TLS certificate subject\n--registry               : IP or FQDN for the docker registry ( default: $(hostname -f))\n--clean                  : clean up all existing repositories data\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action init-registry \\\\\n  --args \"[args]\"\n`}</code></pre>\n    <h2>{`3. `}<inlineCode parentName=\"h2\">{`start-registry`}</inlineCode></h2>\n    <p>{`Start a local Docker registry.`}</p>\n    <p>{`This action starts the Docker registry created by `}<inlineCode parentName=\"p\">{`init-registry`}</inlineCode>{`.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--port                   : registry service port (default: 5000 )\n--dir                    : local directory for the docker registry (default: /tmp/docker-registry)\n--engine                 : container engine to run the container (docker or podman)\n--image                  : docker registry image (default: docker.io/library/registry:2.6)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action start-registry \\\\\n  --args \"[args]\"\n`}</code></pre>\n    <h2>{`4. `}<inlineCode parentName=\"h2\">{`mirror-images`}</inlineCode></h2>\n    <p>{`Mirror images from a public source repository to an internal target repository.`}</p>\n    <p>{`Run this action to copy all images required by the CASE from their original source registries into your internal registry. All images copied in this way will maintain their namespace/registry path. For example, mirroring `}<inlineCode parentName=\"p\">{`docker.io/ibmcom/datapower:10.0.0.0`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`my-registry.io`}</inlineCode>{` will result in the image `}<inlineCode parentName=\"p\">{`my-registry.io/ibmcom/datapower:10.0.0.0`}</inlineCode>{`.  Must supply the Image Group appropriate for your license.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`license.use`}</inlineCode></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Image Group`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`production`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ibmdpProd`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`nonproduction`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ibmdpNonprod`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`developers`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ibmdpDeved`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`developers-limited`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`ibmdpLimited`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`When deploying within IBM Cloud Pak for Integration, use image group `}<inlineCode parentName=\"p\">{`ibmdpCp4i`}</inlineCode>{`.`}</p>\n      <p>{`For more details regarding deployment within IBM Cloud Pak for Integration, see `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.ibm.com/docs/en/cloud-paks/cp-integration/2021.3?topic=instantiating-gateway-functionality-datapower\"\n        }}>{`Cloud Pak for Integration: Instantiating gateway functionality with DataPower`}</a>{`.`}</p>\n    </InlineNotification>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--dryRun                 : print the actions that would be taken and exit without writing to the destinations\n--inputDir               : path to saved CASE directory (required)\n--fromRegistry           : override the source image registry in the CASE\n--registry               : target container image registry (required)\n--chunks                 : mirror the images in batches with a given size. Default is 100\n--groups                 : comma-separated list of image groups to mirror\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action mirror-images \\\\\n  --args \"--registry $TARGET_REGISTRY --inputDir /tmp/cases --groups $IMAGE_GROUP\"\n`}</code></pre>\n    <p>{`Where `}<inlineCode parentName=\"p\">{`$TARGET_REGISTRY`}</inlineCode>{` is the URL of the internal mirroring image registry and `}<inlineCode parentName=\"p\">{`$IMAGE_GROUP`}</inlineCode>{` is the correct Image Group for your license type.`}</p>\n    <h2>{`5. `}<inlineCode parentName=\"h2\">{`stop-registry`}</inlineCode></h2>\n    <p>{`Stop a local Docker registry.`}</p>\n    <p>{`This action stops the Docker registry started by `}<inlineCode parentName=\"p\">{`start-registry`}</inlineCode>{`. Run this action only after you’ve completed the mirroring process.`}</p>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action stop-registry\n`}</code></pre>\n    <h2>{`6. `}<inlineCode parentName=\"h2\">{`configure-cluster-airgap`}</inlineCode></h2>\n    <p>{`Configure cluster to utilize mirrored image registry.`}</p>\n    <p>{`This command deploys an `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.openshift.com/container-platform/4.5/openshift_images/image-configuration.html#images-configuration-registry-mirror_image-configuration\"\n      }}>{`ImageContentSourcePolicy`}</a>{` that redirects image pull requests of Pods from their original source to the internal target registry.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--dryRun                 : print the actions that would be taken and exit without writing to the destinations\n--inputDir               : path to saved CASE directory\n--registry               : target container image registry (required)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action configure-cluster-airgap \\\\\n  --args \"--registry $TARGET_REGISTRY --inputDir /tmp/cases\"\n`}</code></pre>\n    <h2>{`7. `}<inlineCode parentName=\"h2\">{`install-catalog`}</inlineCode></h2>\n    <p>{`Install the CatalogSource object to your cluster.`}</p>\n    <p>{`This command deploys the OLM CatalogSource object into the cluster in the `}<inlineCode parentName=\"p\">{`openshift-marketplace`}</inlineCode>{` namespace. Once the CatalogSource is in the OCP cluster, the DataPower Operator will become a tile in the OCP Operator UI. The CatalogSource is required to create a Subscription to the DataPower Operator.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`This action must be taken prior to `}<inlineCode parentName=\"p\">{`install-operator`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--dryRun                 : print the actions that would be taken and exit without writing to the destinations\n--registry               : target container image registry\n--recursive              : recursively install dependent catalogs\n--inputDir               : path to saved CASE directory ( required if --recurse is set)\n`}</code></pre>\n    <h4><inlineCode parentName=\"h4\">{`--registry`}</inlineCode></h4>\n    <p>{`A target registry can be specified for pulling the CatalogSource image. If an ImageContentSourcePolicy is in place on the cluster, this argument shouldn’t be required.`}</p>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action install-catalog \\\\\n  --args \"--registry $TARGET_REGISTRY\"\n`}</code></pre>\n    <h2>{`8. `}<inlineCode parentName=\"h2\">{`install-operator`}</inlineCode></h2>\n    <p>{`Install the Operator via OLM Subscription.`}</p>\n    <p>{`This command installs the DataPower Operator by way of OLM Subscription. A Subscription yaml is applied to the cluster in the namespace provided. If an OperatorGroup is not already present, one will be created.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--dryRun                 : print the actions that would be taken and exit without writing to the destinations\n--channelName            : name of channel for subscription (packagemanifest default used if not specified)\n--secret                 : name of existing image pull secret for the container image registry\n--registry               : container image registry (required if pass|user specified)\n--user                   : login user name for the container image registry (required if registry|pass specified)\n--pass                   : login password for the container image registry (required if registry|user specified)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action install-operator\n`}</code></pre>\n    <h2>{`9. `}<inlineCode parentName=\"h2\">{`uninstall-operator`}</inlineCode></h2>\n    <p>{`Uninstall the Operator OLM Subscription.`}</p>\n    <p>{`This command uninstalls the Operator by removing the OLM Subscription from the provided namespace.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`All Operator Subscriptions `}<strong parentName=\"p\">{`should`}</strong>{` be uninstalled before uninstalling the CatalogSource.`}</p>\n    </InlineNotification>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--dryRun                 : print the actions that would be taken and exit without writing to the destinations\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action uninstall-operator\n`}</code></pre>\n    <h2>{`10. `}<inlineCode parentName=\"h2\">{`uninstall-catalog`}</inlineCode></h2>\n    <p>{`Uninstall the Operator CatalogSource.`}</p>\n    <p>{`This command removes the CatalogSource from the cluster.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--dryRun                 : print the actions that would be taken and exit without writing to the destinations\n--recursive              : recursively install dependent catalogs\n--inputDir               : path to saved CASE directory ( required if --recurse is set)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action uninstall-catalog\n`}</code></pre>\n    <h2>{`11. `}<inlineCode parentName=\"h2\">{`install-operator-native`}</inlineCode></h2>\n    <p>{`Install the Operator using standard Kubernetes resources.`}</p>\n    <p>{`This command deploys the DataPower Operator using standard Kubernetes resources, namely Deployment. Installing this way will not benefit from any of OLM’s functionality.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--secret                 : name of existing image pull secret for the container image registry\n--registry               : container image registry (required if pass|user specified)\n--user                   : login user name for the container image registry (required if pass specified)\n--pass                   : login password for the container image registry (required if user specified)\n--recursive              : recursively install dependent catalogs\n--inputDir               : path to saved CASE directory ( required if --recurse is set)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action install-operator-native\n`}</code></pre>\n    <h2>{`12. `}<inlineCode parentName=\"h2\">{`uninstall-operator-native`}</inlineCode></h2>\n    <p>{`Uninstall DataPower Operator which was installed using native Kubernetes resources.`}</p>\n    <h3>{`Arguments`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`--deleteCRDs             : deletes CRD's associated with this operator (if not set, crds won't get deleted)\n--recursive              : recursively install dependent catalogs\n--inputDir               : path to saved CASE directory ( required if --recurse is set)\n`}</code></pre>\n    <h3>{`Example`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n  --case /path/to/case \\\\\n  --namespace my-namespace \\\\\n  --inventory datapowerOperator \\\\\n  --action uninstall-operator-native\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}