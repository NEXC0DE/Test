{"version":3,"sources":["webpack:///./src/pages/migration/containers.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","small","kind","to","isMDXComponent"],"mappings":"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","file":"component---src-pages-migration-containers-mdx-4077f499c426cb1a81ea.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { Link } from 'gatsby';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This guide provides steps to migrate an existing IBM DataPower Gateway (physical / virtual) to a container-based deployment utilizing the IBM DataPower Operator.`}</p>\n    </PageDescription>\n    <h2>{`Prepare for your migration`}</h2>\n    <p>{`This guide assumes that you have already installed IBM DataPower Operator; if you have not, see `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/getting-started\"\n      }}>{`Getting Started`}</a>{`.`}</p>\n    <p>{`Additionally, ensure that you have:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`working knowledge of our latest `}<a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta3\"\n        }}><inlineCode parentName=\"a\">{`DataPowerService`}</inlineCode></a>{` API version (`}<inlineCode parentName=\"li\">{`v1beta3`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\">{`familiarity with `}<a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/guides/domain-configuration\"\n        }}>{`Domain configuration`}</a></li>\n    </ul>\n    <h2>{`Migrate`}</h2>\n    <h3>{`Overview`}</h3>\n    <p>{`Follow the steps below to migrate your IBM DataPower Gateway to an IBM DataPower Operator managed deployment:`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Backing up your existing IBM DataPower Gateway deployment</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Generating ConfigMap YAMLs for application domains</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Creating ConfigMaps in your Kuberetes / OpenShift cluster</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Creating Secrets in your Kubernetes / OpenShift cluster</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Creating an admin user credential</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Building the DataPowerService resource spec</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Deploying the DataPowerService resource</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Backing up your existing IBM DataPower Gateway deployment`}</h3>\n    <ol>\n      <li parentName=\"ol\">{`Log in to your existing IBM DataPower Gateway WebGUI as the `}<inlineCode parentName=\"li\">{`admin`}</inlineCode>{` user.`}</li>\n      <li parentName=\"ol\">{`From the `}<inlineCode parentName=\"li\">{`default`}</inlineCode>{` domain, select `}<strong parentName=\"li\">{`Export Configration`}</strong>{` in the Control Panel.`}</li>\n      <li parentName=\"ol\">{`Select either `}<strong parentName=\"li\">{`Create a backup of one or more application domains`}</strong>{` or `}<strong parentName=\"li\">{`Create a backup of the entire system`}</strong>{`, depending on how many domains you intend to migrate.`}</li>\n      <li parentName=\"ol\">{`Follow the system prompts.`}</li>\n      <li parentName=\"ol\">{`Once complete, download the backup ZIP.`}</li>\n    </ol>\n    <h3>{`Generating ConfigMap YAMLs for application domains`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Download the `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/IBM/datapower-operator-scripts#migrate-backupsh\"\n          }}><inlineCode parentName=\"a\">{`migrate-backup.sh`}</inlineCode></a>{` script.`}</p>\n        <p parentName=\"li\">{`This script is designed to automatically generate the ConfigMaps for each application domain from an IBM DataPower Gateway backup:`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`ConfigMap YAML for each domain `}<inlineCode parentName=\"li\">{`.cfg`}</inlineCode>{` file`}</li>\n          <li parentName=\"ul\">{`ConfigMap YAML for each domain’s `}<inlineCode parentName=\"li\">{`local:///`}</inlineCode>{` file system`}</li>\n        </ul>\n        <p parentName=\"li\">{`For details on the script’s invocation, see `}<inlineCode parentName=\"p\">{`./migrate-backup.sh --help`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run the script against your backup ZIP.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`./migrate-backup.sh backup.zip\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Note:`}</strong>{` If you only wish to migrate a single domain, specify the `}<inlineCode parentName=\"p\">{`-d`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--domain`}</inlineCode>{` argument. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`./migrate-backup.sh --domain test backup.zip\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Inspect the generated output for details on where output files are generated, for example,`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`YAML will be generated in: backup-output\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Review the generated YAML files.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Files ending in `}<inlineCode parentName=\"li\">{`-cfg.yaml`}</inlineCode>{` contain the domain’s configuration in `}<inlineCode parentName=\"li\">{`cfg`}</inlineCode>{` format.`}</li>\n          <li parentName=\"ul\">{`Files ending in `}<inlineCode parentName=\"li\">{`-local.yaml`}</inlineCode>{` contain the domain’s `}<inlineCode parentName=\"li\">{`local:///`}</inlineCode>{` file system, in `}<inlineCode parentName=\"li\">{`.tar.gz`}</inlineCode>{` format.`}</li>\n        </ul>\n        <p parentName=\"li\">{`You apply the YAML (both formats) in the next step.`}</p>\n      </li>\n    </ol>\n    <h3>{`Creating ConfigMaps in your Kuberetes / OpenShift cluster`}</h3>\n    <p>{`In the appropriate Kubernetes namespace or OpenShift project, apply the generated YAML for each domain that you wish to migrate.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`The below examples use `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` CLI as example (for OpenShift), Kubernetes users should substitue `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` where appropriate, and make sure to use `}<inlineCode parentName=\"p\">{`-n namespace`}</inlineCode>{` to specify the target namespace for resource creation.`}</p>\n    </InlineNotification>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` These ConfigMaps will be used later in `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/migration/containers#building-the-datapowerservice-resource-spec\"\n      }}>{`Building the DataPowerService resource spec`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`(OpenShift only) Using your `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` CLI, switch to the project (namespace) you wish to deploy the migrated IBM DataPower Gateway.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc project <namespace>\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Apply the generated YAML files. Be sure to apply all YAML files for each domain you wish to migrate.`}</p>\n        <p parentName=\"li\">{`Example of single domain with a `}<inlineCode parentName=\"p\">{`cfg`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`local`}</inlineCode>{` YAML each:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cd backup-output\noc apply -f domain-cfg.yaml\noc apply -f domain-local.yaml\n`}</code></pre>\n        <p parentName=\"li\">{`Example using bash scripting to apply all YAMLs from the backup at once:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`for yaml in $(find backup-output -name '*.yaml'); do\n    oc apply -f $yaml\ndone\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Once the YAML is applied, check the cluster to ensure that everything looks correct:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc get configmap\n`}</code></pre>\n      </li>\n    </ol>\n    <h3>{`Creating Secrets in your Kubernetes / OpenShift cluster`}</h3>\n    <p>{`The TLS keys and certificates used by your IBM DataPower Gateway services must be stored in Kubernetes Secrets.`}</p>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` These Secrets will be used later in `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/migration/containers#building-the-datapowerservice-resource-spec\"\n      }}>{`Building the DataPowerService resource spec`}</a>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Gather the keys and certificates you wish to use.`}</p>\n        <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n          <p parentName=\"li\"><strong parentName=\"p\">{`Note:`}</strong>{` You cannot export the private keys from an existing physical or virtual appliance.`}</p>\n        </InlineNotification>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`For each key/cert pair or set of crypto, create a Secret with an appropriate name to reference later:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc create secret tls <my-tls-secret> --key=/path/to/my.crt --cert=/path/to/my.key\n`}</code></pre>\n        <p parentName=\"li\">{`or for generic (non-TLS) crypto:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc create secret generic <my-crypto-secret> --from-file=/path/to/cert --from-file=/path/to/key\n`}</code></pre>\n        <p parentName=\"li\">{`Refer to the Kubernetes `}<a parentName=\"p\" {...{\n            \"href\": \"https://kubernetes.io/docs/concepts/configuration/secret/\"\n          }}>{`documentation`}</a>{` for details on the differences among Secrets.`}</p>\n      </li>\n    </ol>\n    <h3>{`Creating an admin user credential`}</h3>\n    <p>{`Following security best-practices, the IBM DataPower Gateway `}<inlineCode parentName=\"p\">{`admin`}</inlineCode>{` user credentials are stored in a Kubernetes Secret.`}</p>\n    <p>{`Create the Secret using `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` (or `}<inlineCode parentName=\"p\">{`kubectl`}</inlineCode>{` for Kubernetes), specifying the password via CLI, and noting the name of the Secret as you will need this later:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret generic admin-credentials --from-literal=password=admin\n`}</code></pre>\n    <p>{`Example: In the above command, `}<inlineCode parentName=\"p\">{`admin-credentials`}</inlineCode>{` is the name of the Secret, and `}<inlineCode parentName=\"p\">{`admin`}</inlineCode>{` is the password.`}</p>\n    <h3>{`Building the DataPowerService resource spec`}</h3>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Recommended:`}</strong>{` Open our DataPowerService `}<a parentName=\"p\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta3\"\n        }}>{`API docs`}</a>{` for reference as you build your custom resource spec.`}</p>\n    </InlineNotification>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open your editor of choice, and start with the following template:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  name: migration-example\nspec:\n  replicas: 1\n  version: 10.0-cd\n  license:\n    accept: true\n    use: production\n    license: L-RJON-BYDR3Q\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Edit the `}<inlineCode parentName=\"p\">{`spec.version`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`spec.license`}</inlineCode>{` to choose your desired firmware version and edition.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Refer to our `}<a parentName=\"li\" {...{\n              \"href\": \"/datapower-operator-doc/guides/licenses\"\n            }}>{`Licenses guide`}</a>{` for appropriate values for `}<inlineCode parentName=\"li\">{`spec.license.license`}</inlineCode>{` and how they map to the `}<inlineCode parentName=\"li\">{`spec.version`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`spec.license.use`}</inlineCode>{`.`}</li>\n          <li parentName=\"ul\">{`Refer to the `}<a parentName=\"li\" {...{\n              \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta3#license\"\n            }}><inlineCode parentName=\"a\">{`spec.license`}</inlineCode></a>{` and `}<a parentName=\"li\" {...{\n              \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta3#version\"\n            }}><inlineCode parentName=\"a\">{`spec.version`}</inlineCode></a>{` API docs for details on these fields.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`spec.users`}</inlineCode>{` definition for your `}<inlineCode parentName=\"p\">{`admin`}</inlineCode>{` user, using the Secret name (`}<inlineCode parentName=\"p\">{`admin-credentials`}</inlineCode>{`) created in the `}<a parentName=\"p\" {...{\n            \"href\": \"/datapower-operator-doc/migration/containers#creating-an-admin-user-credential\"\n          }}>{`Create an admin user credential`}</a>{` step for the value of `}<inlineCode parentName=\"p\">{`passwordSecret`}</inlineCode>{`. See the `}<a parentName=\"p\" {...{\n            \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta3#users\"\n          }}><inlineCode parentName=\"a\">{`spec.users`}</inlineCode></a>{` API docs for details.`}</p>\n        <p parentName=\"li\">{`For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`users:\n- name: admin\n  accessLevel: privileged\n  passwordSecret: admin-credentials\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Add a `}<inlineCode parentName=\"p\">{`spec.domains`}</inlineCode>{` definition, with an entry for each application domain you wish to deploy.`}</p>\n        <p parentName=\"li\">{`For reference, see the `}<a parentName=\"p\" {...{\n            \"href\": \"/datapower-operator-doc/guides/domain-configuration\"\n          }}>{`Domain configuration guide`}</a>{`.`}</p>\n        <p parentName=\"li\">{`As an example, let’s assume a domain name of `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{`. Let’s also assume that we created `}<inlineCode parentName=\"p\">{`example-cfg`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`example-local`}</inlineCode>{` ConfigMaps for this domain, containing its configuration and `}<inlineCode parentName=\"p\">{`local:///`}</inlineCode>{` file system respectively. The `}<inlineCode parentName=\"p\">{`spec.domains`}</inlineCode>{` definition would be:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`domains:\n- name: example\n  dpApp:\n    config:\n    - example-cfg\n    local:\n    - example-local\n`}</code></pre>\n        <p parentName=\"li\">{`Next, update the domain object to include any `}<a parentName=\"p\" {...{\n            \"href\": \"/datapower-operator-doc/guides/domain-configuration#certs\"\n          }}>{`certs`}</a>{` definitions, referencing the Secrets you created in an earlier step containg TLS or other crypto material.`}</p>\n        <p parentName=\"li\">{`As an example, let’s assume we created a Secret named `}<inlineCode parentName=\"p\">{`example-service`}</inlineCode>{` which contains a TLS key/cert pair for a service defined in this `}<inlineCode parentName=\"p\">{`example`}</inlineCode>{` application domain. The amended domains spec would be:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`domains:\n- name: example\n  certs:\n  - certType: usrcerts\n    secret: example-service\n  dpApp:\n    config:\n    - example-cfg\n    local:\n    - example-local\n`}</code></pre>\n        <p parentName=\"li\">{`Repeat the full procedure in this step for each application domain you wish to deploy.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`You should now have a complete DataPowerService definition. Putting the above examples together would give us:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\"\n          }}>{`apiVersion: datapower.ibm.com/v1beta3\nkind: DataPowerService\nmetadata:\n  name: migration-example\nspec:\n  replicas: 1\n  version: 10.0-cd\n  license:\n    accept: true\n    use: production\n    license: L-RJON-BYDR3Q\n  users:\n  - name: admin\n    accessLevel: privileged\n    passwordSecret: admin-credentials\n  domains:\n  - name: example\n    certs:\n    - certType: usrcerts\n      secret: example-service\n    dpApp:\n      config:\n      - example-cfg\n      local:\n      - example-local\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Save the YAML to a file of your choosing. For subsequent examples, we’ll use `}<inlineCode parentName=\"p\">{`migration-example.yaml`}</inlineCode>{`.`}</p>\n      </li>\n    </ol>\n    <h3>{`Deploying the DataPowerService resource`}</h3>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create the DataPowerService resource in the cluster.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`oc apply -f migration-example.yaml\n`}</code></pre>\n        <p parentName=\"li\">{`For Kubernetes users, where `}<inlineCode parentName=\"p\">{`namespace`}</inlineCode>{` is your desired namespace:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl -n namespace -f migration-example.yaml\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Check the status of the deployment to ensure successful migration.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`# full view\noc get all\n\n# just the DataPowerService instance(s)\noc get dp\n`}</code></pre>\n        <p parentName=\"li\">{`For Kubernetes users:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`# full view\nkubectl -n namespace get all\n\n# just the DataPowerService instance(s)\nkubectl -n namespace get dp\n`}</code></pre>\n        <p parentName=\"li\">{`Refer to our guide on `}<a parentName=\"p\" {...{\n            \"href\": \"/datapower-operator-doc/guides/operand-status\"\n          }}>{`operand status`}</a>{` for more information.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`If the DataPowerService is operational and `}<inlineCode parentName=\"p\">{`Ready`}</inlineCode>{`, continue on to modernizing your IBM DataPower Gateway workloads.`}</p>\n      </li>\n    </ol>\n    <h2>{`Modernize`}</h2>\n    <p>{`Now that you have successfully migrated an existing IBM DataPower Gateway workload to Kubernetes / OpenShift leveraging the IBM DataPower Operator, you can begin leveraging features that modernize your deployment.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Automatically scale your IBM DataPower Gateway pods horizontally or vertically using `}<a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/features/pod-auto-scaling\"\n        }}>{`Pod Auto-Scaling`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Learn how the IBM DataPower Operator manages IBM DataPower Gateway upgrades in `}<a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/features/operand-upgrade\"\n        }}>{`Operand Upgrades`}</a>{`.`}{\n          /* these Link elements are a workaround for https://github.com/carbon-design-system/gatsby-theme-carbon/issues/1134 */\n        }</li>\n      <li parentName=\"ul\">{`Fine-tune your topology and scheduling of IBM DataPower Gateway pods using `}<Link to=\"/apis/datapowerservice/v1beta3#affinity\" mdxType=\"Link\">{`affinity`}</Link>{`, `}<Link to=\"/apis/datapowerservice/v1beta3#tolerations\" mdxType=\"Link\">{`tolerations`}</Link>{`, and `}<Link to=\"/apis/datapowerservice/v1beta3#nodeselector\" mdxType=\"Link\">{`nodeSelector`}</Link>{` properties in the `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` custom resource.`}</li>\n      <li parentName=\"ul\">{`Check out our `}<a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/release-notes/cd\"\n        }}>{`release notes`}</a>{` for the latest details on features and changes within the IBM DataPower Operator.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}