{"version":3,"sources":["webpack:///./src/pages/uninstall/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,YAACO,EAAD,KAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAG5E,YAACR,EAAD,CAAiBQ,QAAQ,mBACvB,mHAEF,YAACP,EAAD,CAAaO,QAAQ,eACvB,YAACN,EAAD,CAAYM,QAAQ,cAApB,2BACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,yBACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,0BACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,iBAEE,iDACA,kCAAiB,sBAAQC,WAAW,KAAnB,QAAjB,0DACA,sBACE,kBAAIA,WAAW,MAAf,cAAmC,0BAAYA,WAAW,MAAvB,oBAAnC,QAAyG,0BAAYA,WAAW,MAAvB,oBAAzG,qCACA,kBAAIA,WAAW,MAAf,+CACA,kBAAIA,WAAW,MAAf,sDAEF,+CACA,oCACA,iHAAgG,0BAAYA,WAAW,KAAvB,WAAhG,8NACA,oCACA,kCAAiB,0BAAYA,WAAW,KAAvB,MAAjB,kEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,+DAEL,gDACA,kGAAiF,mBAAGA,WAAW,KAAQ,CACnG,KAAQ,yCADqE,iBAAjF,KAGA,uCACA,2EACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,wHAGL,sCACA,wEACA,+dAA8c,0BAAYA,WAAW,KAAvB,oBAA9c,yHACA,oEACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,mGAEL,8GACA,uFAAsE,0BAAYA,WAAW,KAAvB,oBAAtE,kEAKJH,EAAWI,gBAAiB","file":"component---src-pages-uninstall-index-mdx-789e203f76ee63999fe5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`A guide to uninstalling the DataPower Operator with troubleshooting tips and workarounds.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Order of uninstallation</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Uninstalling with OLM</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Uninstalling with CASE</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Known issues</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Order of uninstallation`}</h2>\n    <p>{`Resources `}<strong parentName=\"p\">{`must`}</strong>{` be removed in the following order to avoid deadlocks:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Remove all `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`DataPowerMonitor`}</inlineCode>{` Custom Resources from namespace.`}</li>\n      <li parentName=\"ol\">{`Uninstall Operator with either OLM or CASE.`}</li>\n      <li parentName=\"ol\">{`If completely removing from cluster, remove CRDs.`}</li>\n    </ol>\n    <h2>{`Uninstalling with OLM`}</h2>\n    <h3>{`In the GUI`}</h3>\n    <p>{`In the OCP GUI, navigate to Operators->Installed Operators on the left side pane. In the `}<inlineCode parentName=\"p\">{`Project`}</inlineCode>{` dropdown box, select the namespace from which to uninstall. Find the specific DataPower Operator Subscription you wish to uninstall and click the options menu on the right side of the row. Select “Uninstall Operator”.`}</p>\n    <h3>{`In the CLI`}</h3>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` CLI tool, delete the DataPower Operator Subscription by doing`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc -n mynamespace delete subscription datapower-operator\n`}</code></pre>\n    <h2>{`Uninstalling with CASE`}</h2>\n    <p>{`For uninstalling via CASE, refer to the relevant uninstall command in the `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/install/case\"\n      }}>{`CASE document`}</a>{`.`}</p>\n    <h2>{`Removing CRDs`}</h2>\n    <p>{`To remove the DataPower CRDs from the cluster, run`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl delete crds datapowerservices.datapower.ibm.com\nkubectl delete crds datapowermonitors.datapower.ibm.com \n`}</code></pre>\n    <h2>{`Known issues`}</h2>\n    <h3>{`Custom Resource deletion blocked by conversion`}</h3>\n    <p>{`As of DataPower Operator version 1.1.0, a conversion webhook is deployed by the DataPower Operator. If the conversion webhook was managed by the DataPower Operator being uninstalled it will get cleaned up due to having Owner References set to the managing DataPower Operator. If you are uninstalling the last DataPower Operator in the cluster, no new conversion webhook will get deployed. Once in this state, it becomes impossible to delete or create new `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resources because the Kubernetes API Server is attempting to connect to a no-longer-alive conversion webhook.`}</p>\n    <p>{`To clear out the conversion definition, run`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl patch crds datapowerservices.datapower.ibm.com -p '{\"spec\": {\"conversion\": null}}'\n`}</code></pre>\n    <p>{`After the patch has been processed, the custom resources can be modified and deleted.`}</p>\n    <p>{`To avoid getting into this situation in the future, remove all `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resources before uninstalling the DataPower Operator.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}