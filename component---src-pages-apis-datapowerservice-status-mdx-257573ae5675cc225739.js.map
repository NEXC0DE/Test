{"version":3,"sources":["webpack:///./src/pages/apis/datapowerservice/status.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,YAACO,EAAD,KAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAG5E,YAACR,EAAD,CAAiBQ,QAAQ,mBACvB,4BAAW,0BAAYC,WAAW,KAAvB,oBAAX,wFAEF,YAACR,EAAD,CAAaO,QAAQ,eACvB,YAACN,EAAD,CAAYM,QAAQ,cAApB,cACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,iBACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,SACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,SACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,aAEE,iCACA,uBAAK,sBAAMC,WAAW,OAAU,IAA3B,w4BAgCL,oCACA,4BAAW,0BAAYA,WAAW,KAAvB,oBAAX,wBAAgG,mBAAGA,WAAW,KAAQ,CAClH,KAAQ,yIADoF,cAAhG,WAEmC,0BAAYA,WAAW,KAAvB,cAFnC,iFAE2K,0BAAYA,WAAW,KAAvB,oBAF3K,cAGA,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,wCAAqG,0BAAYA,WAAW,KAAvB,QAArG,gDAAsM,0BAAYA,WAAW,KAAvB,SAAtM,qGAA6V,0BAAYA,WAAW,KAAvB,oBAA7V,mBACA,4BAAW,0BAAYA,WAAW,KAAvB,kBAAX,0BAAgG,0BAAYA,WAAW,KAAvB,QAAhG,8DAA+M,0BAAYA,WAAW,KAAvB,oBAA/M,SAAqR,0BAAYA,WAAW,KAAvB,UAArR,QAAgV,0BAAYA,WAAW,KAAvB,WAAhV,gHACA,oEAAmD,0BAAYA,WAAW,KAAvB,OAAnD,kBAAqH,0BAAYA,WAAW,KAAvB,oBAArH,gCACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,gLAIL,uCACA,4BAAW,0BAAYA,WAAW,KAAvB,gBAAX,uDAA2H,0BAAYA,WAAW,KAAvB,QAA3H,qCAAiN,0BAAYA,WAAW,KAAvB,SAAjN,4CACA,+BACA,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,uFACA,+BACA,4BAAW,0BAAYA,WAAW,KAAvB,SAAX,sDAAmH,0BAAYA,WAAW,KAAvB,oBAAnH,yCACA,sBACE,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,mCAA4G,0BAAYA,WAAW,MAAvB,oBAA5G,eAAyL,0BAAYA,WAAW,MAAvB,SAAzL,KACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,WAApB,mCAA4G,0BAAYA,WAAW,MAAvB,oBAA5G,OAAiL,0BAAYA,WAAW,MAAvB,SAAjL,KACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,UAApB,uBAA+F,0BAAYA,WAAW,MAAvB,kBAA/F,MAEF,kCACA,4BAAW,0BAAYA,WAAW,KAAvB,YAAX,yKACA,2CAA0B,0BAAYA,WAAW,KAAvB,UAA1B,8FAA2K,0BAAYA,WAAW,KAAvB,WAA3K,oQACA,qFAAoE,0BAAYA,WAAW,KAAvB,8BAApE,iBAA4J,0BAAYA,WAAW,KAAvB,WAA5J,4CAKJH,EAAWI,gBAAiB","file":"component---src-pages-apis-datapowerservice-status-mdx-257573ae5675cc225739.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` is a Custom Resource Definition used to deploy and manage a DataPower StatefulSet.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Conditions</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Custom Images</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Nodes</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Phase</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Versions</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`$ oc get dp\nNAME        READY   SUMMARY                           VERSION    ERROR   AGE\ndpservice   True    StatefulSet replicas ready: 3/3   10.0.0.0   n/a     2m16s\n\n$ oc describe dp/dpservice\n...\nStatus:\n  Conditions:\n    Last Transition Time:  2020-05-18T23:16:28Z\n    Message:               StatefulSet replicas ready: 3/3\n    Reason:                StatefulSetReady\n    Status:                True\n    Type:                  Ready\n    Last Transition Time:  2020-05-18T23:14:37Z\n    Message:               n/a\n    Reason:                NoError\n    Status:                False\n    Type:                  ReconcileError\n  Custom Images:           false\n  Nodes:\n    dpservice-0\n    dpservice-1\n    dpservice-2\n  Phase:  Running\n  Versions:\n    Available:\n      Channels:\n        Name:  10.0.0\n      Versions:\n        Name:    10.0.0.0\n    Reconciled:  10.0.0.0\n`}</code></pre>\n    <h2>{`Conditions`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` supports Kubernetes `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties\"\n      }}>{`Conditions`}</a>{`. These `}<inlineCode parentName=\"p\">{`Conditions`}</inlineCode>{` can be viewed as a snapshot of the current and most up-to-date status of the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` instance.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Ready`}</inlineCode>{` condition, for example, will be set `}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` when all of the Pods in the StatefulSet are `}<inlineCode parentName=\"p\">{`Ready`}</inlineCode>{`, and the number of replicas in the StatefulSet matches the desired number of replicas set by the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` instance spec.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ReconcileError`}</inlineCode>{` condition will be set `}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` when an error is encountered during reconciliation of the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`Reason`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Message`}</inlineCode>{` should have details regarding what the error may have been, such as a referenced ConfigMap not being found.`}</p>\n    <p>{`Both of these conditions are exposed in the `}<inlineCode parentName=\"p\">{`get`}</inlineCode>{` output of the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` as well, for each checking:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ oc get dp\nNAME        READY   SUMMARY                           VERSION    ERROR   AGE\ndpservice   True    StatefulSet replicas ready: 3/3   10.0.0.0   n/a     2m16s\n`}</code></pre>\n    <h2>{`Custom Images`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`CustomImages`}</inlineCode>{` status property is a boolean flag that will be set `}<inlineCode parentName=\"p\">{`True`}</inlineCode>{` when a custom image (set via the `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{` property in the CR spec) is being used.`}</p>\n    <h2>{`Nodes`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Nodes`}</inlineCode>{` status provides the list of DataPower Pods currently deployed via the StatefulSet.`}</p>\n    <h2>{`Phase`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Phase`}</inlineCode>{` status property provides the current phase of the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{`. The value can be one the following:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Pending`}</inlineCode>{` - There are no errors, but the `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` is not yet `}<inlineCode parentName=\"li\">{`Ready`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Running`}</inlineCode>{` - There are no errors, and the `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` is `}<inlineCode parentName=\"li\">{`Ready`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Failed`}</inlineCode>{` - There has been a `}<inlineCode parentName=\"li\">{`ReconcileError`}</inlineCode>{`.`}</li>\n    </ul>\n    <h2>{`Versions`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Versions`}</inlineCode>{` status provides information about the currently reconciled version of the operand (DataPower), as well as the available versions and channels the operator supports.`}</p>\n    <p>{`A channel, such as `}<inlineCode parentName=\"p\">{`10.0.0`}</inlineCode>{`, allows for a user to subscribe to a stream of releases. When initially deployed with the `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` property in the CR spec set to a channel, the operator will automatically install the latest available version within that channel. When new versions are released in that channel, the operands (CR instances) will automatically be upgraded by the operator.`}</p>\n    <p>{`The currently reconciled version will always be available in `}<inlineCode parentName=\"p\">{`status.versions.reconciled`}</inlineCode>{`, even if the `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` specified in the CR spec is a channel.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}