(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{wKyo:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var o=n("7ljp"),a=n("013z");n("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var l={},i=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",t)}},p=i("PageDescription"),c=i("InlineNotification"),b={_frontmatter:l},s=a.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(s,r({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(p,{mdxType:"PageDescription"},Object(o.b)("p",null,"If any known issues exist or migration paths are needed to upgrade from one version of the DataPower Operator to another, they will be documented here.")),Object(o.b)("h1",null,"1.2.0"),Object(o.b)("h2",null,"Pod Topology Spread Constraints"),Object(o.b)("h3",null,"Symptoms"),Object(o.b)("p",null,"DataPower Operator pods fail to schedule, stating that no nodes match pod topology spread constraints (missing required label)."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"0/15 nodes are available: 12 node(s) didn't match pod topology spread constraints (missing required label), 3 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.\n")),Object(o.b)("h3",null,"Description"),Object(o.b)("p",null,"There was a ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/kubernetes/kubernetes/issues/95808"}),"Kubernetes bug")," that allowed for pods to schedule when ",Object(o.b)("inlineCode",{parentName:"p"},"topologyKey")," was not matched. Kubernetes recently fixed this bug in 1.20, and back-ported the fix to 1.18 and 1.19."),Object(o.b)("p",null,"Once this fix is installed to a Kubernetes cluster, the scheduler would no longer schedule DataPower Operator pods, due to the ",Object(o.b)("inlineCode",{parentName:"p"},"topologyKey")," in our pod spec not using a well-known “zone” label."),Object(o.b)("h3",null,"Solution"),Object(o.b)(c,{mdxType:"InlineNotification"},Object(o.b)("p",null,"We have fixed this issue in DataPower Operator version ",Object(o.b)("inlineCode",{parentName:"p"},"1.2.1"),", see ",Object(o.b)("a",r({parentName:"p"},{href:"/release-notes#1.2.1"}),"Release notes"),".")),Object(o.b)("p",null,"Performing a clean installation of DataPower Operator version ",Object(o.b)("inlineCode",{parentName:"p"},"1.2.1")," or higher should succeed without the below workaround needed. However, if you previously tried to upgrade to ",Object(o.b)("inlineCode",{parentName:"p"},"1.2.0")," and the upgrade is stuck in a pending state, the following workaround can be used to allow the ",Object(o.b)("inlineCode",{parentName:"p"},"1.2.0")," install to complete."),Object(o.b)("p",null,"Manually add a ",Object(o.b)("inlineCode",{parentName:"p"},"zone")," label (with any value) to one of the worker nodes in the Kubernetes cluster. The DataPower Operator pods will then be scheduled to that worker node."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"kubectl label nodes <node-name> zone=<label-value>\n")),Object(o.b)("p",null,"Reference: ",Object(o.b)("a",r({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#step-one-attach-label-to-the-node"}),"Assigning Pods to Nodes")),Object(o.b)("p",null,"Optionally, once a successful upgrade to ",Object(o.b)("inlineCode",{parentName:"p"},"1.2.1")," has been completed, the ",Object(o.b)("inlineCode",{parentName:"p"},"zone")," label can be removed from the node(s) in the cluster. This ",Object(o.b)("inlineCode",{parentName:"p"},"zone")," label is no longer used in ",Object(o.b)("inlineCode",{parentName:"p"},"1.2.1")," or higher."),Object(o.b)("h2",null,"Slow Kubernetes garbage collection can cause webhook service creation to fail"),Object(o.b)("h3",null,"Symptoms"),Object(o.b)("p",null,"An error may be seen that indicates a webhook ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," is not found:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),'failed calling webhook "datapowerservices.defaulter.datapower.ibm.com": Post https://datapower-operator.default.svc:443/default-datapower-ibm-com-v1beta2-datapowerservice?timeout=2s: service "datapower-operator" not found\n')),Object(o.b)("p",null,"In the ",Object(o.b)("inlineCode",{parentName:"p"},"datapower-operator")," pod logs, the following log message is seen indicating the ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," exists already:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),'{"level":"info","ts":"2020-10-06T20:32:45.818Z","logger":"setup-webhook","msg":"webhook service found. skip create"}\n')),Object(o.b)("p",null,"However, checking for the ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," object (name ",Object(o.b)("inlineCode",{parentName:"p"},"datapower-operator"),") in the namespace would show it does not exist:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"$ kubectl get svc datapower-operator\n")),Object(o.b)("h3",null,"Description"),Object(o.b)("p",null,"During the DataPower Operator boot the defaulting and validating webhooks are initialized. As part of this process, a ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," object is created if not found in the cluster. If the Kubernetes garbage collection is slow or delayed it is possible for the ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," object to have been marked for deletion, but still exist in the namespace for a span of time. If the new DataPower Operator pod attempts to initialize the new ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," resource during this time window, the operator will continue through the boot sequence without creating a new ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," instance."),Object(o.b)("p",null,"Once the Kubernetes garbage collection catches up, and the ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," is deleted, no ",Object(o.b)("inlineCode",{parentName:"p"},"Service")," will remain to expose the webhooks and thus API errors will be seen when invoking the webhooks."),Object(o.b)("h3",null,"Solution"),Object(o.b)("p",null,"To resolve this issue, the DataPower Operator pod can be deleted manually. Once this is done, the Deployment’s ReplicaSet controller will spin up a new DataPower Operator pod, which will in turn create the webhook ",Object(o.b)("inlineCode",{parentName:"p"},"Service"),"."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Fetch the DataPower Operator pod, taking note of the name (will be the first column in the output)."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",r({parentName:"pre"},{}),"kubectl [-n namespace] get pod | grep datapower-operator\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Delete the DataPower Operator pod, where ",Object(o.b)("inlineCode",{parentName:"p"},"name")," is the name of the pod found in Step 5."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",r({parentName:"pre"},{}),"kubectl [-n namespace] delete pod/name\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Validate a new pod is created in its place."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",r({parentName:"pre"},{}),"kubectl [-n namespace] get pod | grep datapower-operator\n")))),Object(o.b)("h1",null,"1.1.0"),Object(o.b)("h2",null,"Operator lock not released after Leader Pod removed"),Object(o.b)("h3",null,"Symptoms"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Immediately following an upgrade from 1.0.X to 1.1.X, you may see the following error when attempting to interact with a DataPowerService CR:",Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",r({parentName:"pre"},{}),'Error from server: conversion webhook for datapower.ibm.com/v1beta1, Kind=DataPowerService failed: Post https://changeme.default.svc:443/?timeout=30s: service "changeme" not found\n'))),Object(o.b)("li",{parentName:"ul"},"Failure to reconcile changes made to a DataPowerService CR after a failover event caused the previous DataPower Operator Leader Pod to be rescheduled.")),Object(o.b)("h3",null,"Description"),Object(o.b)("p",null,"Occasionally, when the DataPower Operator Leader Pod is removed, the new DataPower Operator Pod will show as being Ready but isn’t doing anything. In the logs you might see"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),'{"level":"info","ts":"2020-09-08T19:29:53.432Z","logger":"leader","msg":"Not the leader. Waiting."}\n{"level":"info","ts":"2020-09-08T19:29:57.971Z","logger":"leader","msg":"Leader pod has been deleted, waiting for garbage collection do remove the lock."}\n')),Object(o.b)("p",null,"followed by additional waiting. In this case, Kubernetes’ garbage collection failed to clean up the ",Object(o.b)("inlineCode",{parentName:"p"},"datapower-operator-lock")," after the old Leader Pod was removed. This stops the new DataPower Operator Pod from completing initialization tasks such as creating the conversion webhook."),Object(o.b)("h3",null,"Solution"),Object(o.b)("p",null,"To resolve this issue, you must manually remove the lock resource. This can be done with"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"kubectl delete cm datapower-operator-lock\n")),Object(o.b)("p",null,"Once the lock is removed, the new DataPower Operator pod will begin its initialization."),Object(o.b)("h1",null,"1.0.1"),Object(o.b)("h2",null,"Invalid value for ",Object(o.b)("inlineCode",{parentName:"h2"},"spec.selector")),Object(o.b)("p",null,"When attempting to ugprade from ",Object(o.b)("inlineCode",{parentName:"p"},"1.0.0")," to ",Object(o.b)("inlineCode",{parentName:"p"},"1.0.1")," through the Operator Lifecycle Manager, an error will likely be seen that the ",Object(o.b)("inlineCode",{parentName:"p"},"installPlan")," failed."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),'install strategy failed: Deployment.apps "datapower-operator" is invalid: spec.selector: Invalid value: v1.LabelSelector{...}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable\n')),Object(o.b)("p",null,"This error occurs because between version ",Object(o.b)("inlineCode",{parentName:"p"},"1.0.0")," and ",Object(o.b)("inlineCode",{parentName:"p"},"1.0.1")," a new ",Object(o.b)("inlineCode",{parentName:"p"},"label")," was added to the DataPower Operator Deployment resource to fix an issue related to operator-metrics. However, the install plan is not able to resolve this update because the LabelSelector is an immutable field."),Object(o.b)("h3",null,"Resolution"),Object(o.b)("p",null,"To workaround this issue, you can manually delete the existing ",Object(o.b)("inlineCode",{parentName:"p"},"datapower-operator")," Deployment resource. The Operator Lifecycle Manager should then recreate the ",Object(o.b)("inlineCode",{parentName:"p"},"datapower-operator")," Deployment resource with the ",Object(o.b)("inlineCode",{parentName:"p"},"1.0.1")," spec, and the install plan should succeed."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"oc delete deployment datapower-operator\n")),Object(o.b)("p",null,"Once done, validate a new ",Object(o.b)("inlineCode",{parentName:"p"},"datapower-operator")," Deployment is created:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"oc get deployment\n")),Object(o.b)("p",null,"Then validate the ",Object(o.b)("inlineCode",{parentName:"p"},"1.0.1")," install plan succeeds by checking the ",Object(o.b)("inlineCode",{parentName:"p"},"ClusterServiceVersion")," resource:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{}),"$ oc get csv\nNAME                        DISPLAY                 VERSION   REPLACES                    PHASE\ndatapower-operator.v1.0.1   IBM DataPower Gateway   1.0.1     datapower-operator.v1.0.0   Succeeded\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-troubleshooting-operator-upgrades-mdx-17ab20c533be8da29583.js.map