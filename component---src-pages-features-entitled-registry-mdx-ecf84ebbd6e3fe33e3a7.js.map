{"version":3,"sources":["webpack:///./src/pages/features/entitled-registry.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-features-entitled-registry-mdx-ecf84ebbd6e3fe33e3a7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The DataPower Operator supports automatically pulling IBM DataPower images from the IBM Entitled Registry using your entitlement key.`}</p>\n    </PageDescription>\n    <h2>{`Image selection`}</h2>\n    <p>{`When configuring the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource, there are two properties which will determine which image is pulled, and from what container registry:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#version\"\n        }}>{`version`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#license\"\n        }}>{`license.use`}</a></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` property will decide which base firmware version should be used, while the `}<inlineCode parentName=\"p\">{`license.use`}</inlineCode>{` will determine which edition to use.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`license.use`}</inlineCode></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Registry`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Image location`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`production`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Entitled Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cp.icr.io/cp/datapower/datapower-prod`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`nonproduction`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Entitled Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cp.icr.io/cp/datapower/datapower-nonprod`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`developers`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Entitled Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cp.icr.io/cp/datapower/datapower-deved`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`developers-limited`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Container Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`icr.io/integration/datapower/datapower-limited`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`When deploying within IBM Cloud Pak for Integration, the image location is always `}<inlineCode parentName=\"p\">{`cp.icr.io/cp/datapower/datapower-cp4i`}</inlineCode>{`.`}</p>\n      <p>{`For more details regarding this image, see `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.ibm.com/support/knowledgecenter/SS9H2Y_10.0/com.ibm.dp.doc/icp4i.html\"\n        }}>{`Cloud Pak for Integration: Gateway runtime`}</a>{`.`}</p>\n    </InlineNotification>\n    <h2>{`Image Pull Secret`}</h2>\n    <p>{`If the IBM DataPower image is to be pulled from the IBM Entitled Registry, an Entitlement Key must be used as an Image Pull Secret. You can obtain an Entitlement Key from `}<a parentName=\"p\" {...{\n        \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\"\n      }}>{`My IBM`}</a>{`.`}</p>\n    <h2>{`Default Image Pull Secret`}</h2>\n    <p>{`If you do not specify an Image Pull Secret in your DataPowerService Custom Resource `}<inlineCode parentName=\"p\">{`spec`}</inlineCode>{`, then the operator will look for a Secret named `}<inlineCode parentName=\"p\">{`ibm-entitlement-key`}</inlineCode>{` in the same namespace as the DataPowerService, and it will use this Secret to pull the IBM DataPower images. This is typically the method used to provide the Entitlement Key.`}</p>\n    <p>{`If you want to use your own Entitlement Key, then you can create it.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If you create it with the name `}<inlineCode parentName=\"li\">{`ibm-entitlement-key`}</inlineCode>{` in the same namespace as the DataPowerService, then you do not need to explicitly name it as the Image Pull Secret in your DataPowerService Custom Resource `}<inlineCode parentName=\"li\">{`spec`}</inlineCode>{`, because the operator will find it automatically.`}</li>\n      <li parentName=\"ul\">{`If you create it with a different name, then you must explicitly name it as the Image Pull Secret in your `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` Custom Resource spec, see `}<a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/v1beta3#imagepullsecrets\"\n        }}>{`imagePullSecrets`}</a>{`.`}</li>\n    </ul>\n    <h2>{`Creating the Secret`}</h2>\n    <p>{`If you want to create your own Entitlement Key as a Secret, you must create it in the same namespace as the DataPowerService.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`We recommend that you use the name ibm-entitlement-key`}</li>\n      <li parentName=\"ol\">{`Use `}<inlineCode parentName=\"li\">{`cp`}</inlineCode>{` as the username`}</li>\n      <li parentName=\"ol\">{`Use your Entitlement Key as the password`}</li>\n      <li parentName=\"ol\">{`Use `}<inlineCode parentName=\"li\">{`cp.icr.io`}</inlineCode>{` as the Docker server`}</li>\n    </ol>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret docker-registry \\\\\n  ibm-entitlement-key \\\\\n  --docker-username=cp \\\\\n  --docker-password=<entitlement-key> \\\\\n  --docker-server=cp.icr.io\n`}</code></pre>\n    <p>{`For more information on creating Secrets using the Kubernetes command line, please see their `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <h3>{`Using a custom Service Account`}</h3>\n    <p>{`If you choose to provide your own custom Service Account via the `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#serviceaccountname\"\n      }}>{`serviceAccountName`}</a>{` property on the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` spec, then the DataPower Operator `}<strong parentName=\"p\">{`will not`}</strong>{` automatically attempt to use a `}<inlineCode parentName=\"p\">{`ibm-entitlement-key`}</inlineCode>{` Secret. Instead, you should either add this Image Pull Secret to your Service Account, or provide it manually via the `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#imagepullsecrets\"\n      }}>{`imagePullSecrets`}</a>{` property.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}