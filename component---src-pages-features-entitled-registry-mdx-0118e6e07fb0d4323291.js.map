{"version":3,"sources":["webpack:///./src/pages/features/entitled-registry.mdx"],"names":["name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"yeAMO,IAEeA,EAFTC,EAAe,GAOtBC,GALgBF,EAKgB,kBALR,SAA6BG,GAEzD,OADAC,QAAQC,KAAK,aAAeL,EAAO,2EAC5B,kBAASG,KAIZG,EAAc,CAClBL,gBAEIM,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGP,E,oIACF,mBACD,OAAO,YAACI,EAAD,KAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAG5E,YAACT,EAAD,CAAiBS,QAAQ,mBACvB,+JAEF,yCACA,6CAA4B,0BAAYC,WAAW,KAAvB,oBAA5B,4HACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+DADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,+DADQ,iBAItB,4BAAW,0BAAYA,WAAW,KAAvB,WAAX,+EAA8I,0BAAYA,WAAW,KAAvB,eAA9I,yCACA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,gBACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,eACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,2CAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,kBACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,8CAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,eACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,4CAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,uBACH,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,kCAIT,2CACA,uMAAsL,mBAAGA,WAAW,KAAQ,CACxM,KAAQ,6DAD0K,UAAtL,KAGA,6CACA,oHAAmG,0BAAYA,WAAW,KAAvB,UAAnG,iCAAuL,0BAAYA,WAAW,KAAvB,oBAAvL,qBACA,sBACE,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,uBAA5B,8BACA,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,MAA5B,oBACA,kBAAIA,WAAW,MAAf,4CACA,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,aAA5B,0BAEF,qCACA,uBAAK,sBAAMA,WAAW,OAAU,IAA3B,sKAML,qHAAoG,mBAAGA,WAAW,KAAQ,CACtH,KAAQ,uJADwF,iBAApG,KAGA,wDACA,yFAAwE,mBAAGA,WAAW,KAAQ,CAC1F,KAAQ,0EAD4D,sBAAxE,oBAEoD,0BAAYA,WAAW,KAAvB,oBAFpD,sCAEuJ,sBAAQA,WAAW,KAAnB,YAFvJ,mCAEuO,0BAAYA,WAAW,KAAvB,uBAFvO,0HAEia,mBAAGA,WAAW,KAAQ,CACnb,KAAQ,wEADqZ,oBAFja,eASJH,EAAWI,gBAAiB","file":"component---src-pages-features-entitled-registry-mdx-0118e6e07fb0d4323291.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The DataPower Operator supports automatically pulling IBM DataPower images from the IBM Entitled Registry using your entitlement key.`}</p>\n    </PageDescription>\n    <h2>{`Image Selection`}</h2>\n    <p>{`When configuring the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource, there are two properties which will determine which image is pulled, and from what container registry:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#version\"\n        }}>{`version`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#license\"\n        }}>{`license.use`}</a></li>\n    </ul>\n    <p>{`The `}<inlineCode parentName=\"p\">{`version`}</inlineCode>{` property will decide which base firmware version should be used, while the `}<inlineCode parentName=\"p\">{`license.use`}</inlineCode>{` will determine which edition to use.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"th\">{`license.use`}</inlineCode></th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Registry`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Image location`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`production`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Entitled Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cp.icr.io/cp/datapower/datapower-prod`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`nonproduction`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Entitled Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cp.icr.io/cp/datapower/datapower-nonprod`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`developers`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`IBM Entitled Registry`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`cp.icr.io/cp/datapower/datapower-deved`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`developers-limited`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Dockerhub`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`docker.io/ibmcom/datapower`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`Image Pull Secret`}</h2>\n    <p>{`If the IBM DataPower image is to be pulled from the IBM Entitled Registry, an Entitlement Key must be provided as an Image Pull Secret. You can obtain an Entitlement Key from `}<a parentName=\"p\" {...{\n        \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\"\n      }}>{`My IBM`}</a>{`.`}</p>\n    <h3>{`Creating the Secret`}</h3>\n    <p>{`For the DataPower Operator to automatically consume your Entitlement Key, you must create a `}<inlineCode parentName=\"p\">{`Secret`}</inlineCode>{` in the same namespace as the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource.`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Use `}<inlineCode parentName=\"li\">{`ibm-entitlement-key`}</inlineCode>{` as the name of the Secret`}</li>\n      <li parentName=\"ol\">{`Use `}<inlineCode parentName=\"li\">{`cp`}</inlineCode>{` as the username`}</li>\n      <li parentName=\"ol\">{`Use your Entitlement Key as the password`}</li>\n      <li parentName=\"ol\">{`Use `}<inlineCode parentName=\"li\">{`cp.icr.io`}</inlineCode>{` as the Docker server`}</li>\n    </ol>\n    <p>{`For example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc create secret docker-registry \\\\\n  ibm-entitlement-key \\\\\n  --docker-username=cp \\\\\n  --docker-password=<entitlement-key> \\\\\n  --docker-server=cp.icr.io\n`}</code></pre>\n    <p>{`For more information on creating Secrets using the Kubernetes command line, please see their `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <h3>{`Using a custom Service Account`}</h3>\n    <p>{`If you choose to provide your own custom Service Account via the `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#serviceaccountname\"\n      }}>{`serviceAccountName`}</a>{` property on the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` spec, then the DataPower Operator `}<strong parentName=\"p\">{`will not`}</strong>{` automatically attempt to use a `}<inlineCode parentName=\"p\">{`ibm-entitlement-key`}</inlineCode>{` Secret. Instead, you should either add this Image Pull Secret to your Service Account, or provide it manually via the `}<a parentName=\"p\" {...{\n        \"href\": \"/datapower-operator-doc/apis/datapowerservice/spec#imagepullsecrets\"\n      }}>{`imagePullSecrets`}</a>{` property.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}