(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{qz5u:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return i})),o.d(t,"default",(function(){return s}));o("91GP"),o("rGqo"),o("yt8O"),o("Btvt"),o("RW0V"),o("q1tI");var n=o("7ljp"),l=o("013z");o("qKvR");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n])}return e}).apply(this,arguments)}var r,i={},c=(r="PageDescription",function(e){return console.warn("Component "+r+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",e)}),p={_frontmatter:i},b=l.a;function s(e){var t=e.components,o=function(e,t){if(null==e)return{};var o,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,["components"]);return Object(n.b)(b,a({},p,o,{components:t,mdxType:"MDXLayout"}),Object(n.b)(c,{mdxType:"PageDescription"},Object(n.b)("p",null,"The logging level for the DataPower Operator can be adjusted to aid in troubleshooting issues.")),Object(n.b)("h2",null,"Log level"),Object(n.b)("p",null,"You can adjust the log level of the DataPower Operator Pod. The supported log levels are as follows:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"error")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"info")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"debug")),Object(n.b)("li",{parentName:"ul"},"integer > 0")),Object(n.b)("p",null,"Notes:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Setting the log level to 1 is the equivalent of using ",Object(n.b)("inlineCode",{parentName:"li"},"debug")),Object(n.b)("li",{parentName:"ul"},"Setting the log level to an integer > 1 will increase the log level past ",Object(n.b)("inlineCode",{parentName:"li"},"debug")," for increased verbosity of operator code, as well as library code."),Object(n.b)("li",{parentName:"ul"},"Setting the log level to an integer >= 4 will set the log level for Kubernetes API logging.")),Object(n.b)("p",null,"The mechanism by which you change the logging level may depend on how you installed the operator."),Object(n.b)("h3",null,"Set via Helm chart"),Object(n.b)("p",null,"Our Helm chart offers the ",Object(n.b)("inlineCode",{parentName:"p"},"operator.logLevel")," property as a method to change the log level."),Object(n.b)("h3",null,"Set via Deployment"),Object(n.b)("p",null,"The DataPower Operatorâ€™s ",Object(n.b)("inlineCode",{parentName:"p"},"Deployment")," can also be modified in the cluster directly. In the container spec you will see something like this:"),Object(n.b)("pre",null,Object(n.b)("code",a({parentName:"pre"},{className:"language-yaml"}),'args:\n  - "--zap-encoder=json"\n  - "--zap-level=info"\n  - "--zap-time-encoding=iso8601"\n')),Object(n.b)("p",null,"These values can be modified following the ",Object(n.b)("a",a({parentName:"p"},{href:"https://sdk.operatorframework.io/docs/golang/references/logging/#default-zap-logger"}),"default ",Object(n.b)("inlineCode",{parentName:"a"},"zap")," logger")," documentation."),Object(n.b)("h2",null,"Retrieving logs"),Object(n.b)("p",null,"Logs can be retrieved from the DataPower Operator pod using ",Object(n.b)("inlineCode",{parentName:"p"},"kubectl logs"),", ",Object(n.b)("inlineCode",{parentName:"p"},"oc logs"),", or the OpenShift console if deployed on OpenShift."),Object(n.b)("p",null,"Some examples, where ",Object(n.b)("inlineCode",{parentName:"p"},"datapower-operator-777fccc85-68gs6")," is the Pod name:"),Object(n.b)("pre",null,Object(n.b)("code",a({parentName:"pre"},{className:"language-bash"}),"# dump all logs to file\noc logs datapower-operator-777fccc85-68gs6 > datapower-operator-logs.txt\n\n# stream logs\noc logs -f datapower-operator-777fccc85-68gs6\n\n# dump logs from previous container (i.e. after a restart)\noc logs --previous datapower-operator-777fccc85-68gs6\n")))}s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-troubleshooting-logging-mdx-e3c05ec6c42cc14f8106.js.map