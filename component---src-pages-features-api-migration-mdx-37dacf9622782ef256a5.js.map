{"version":3,"sources":["webpack:///./src/pages/features/api-migration.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAcN,EAAc,eAC5BO,EAAaP,EAAc,cAC3BQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGV,E,oIACF,mBACD,OAAO,YAACO,EAAD,KAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAG5E,YAACR,EAAD,CAAiBQ,QAAQ,mBACvB,gKAEF,YAACP,EAAD,CAAaO,QAAQ,eACvB,YAACN,EAAD,CAAYM,QAAQ,cAApB,cACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,sBAEE,oCACA,qNAAoM,0BAAYC,WAAW,KAAvB,cAApM,uJACA,qHAAoG,mBAAGA,WAAW,KAAQ,CACtH,KAAQ,0CADwF,sBAApG,mBAGA,2CACA,uCAAsB,0BAAYA,WAAW,KAAvB,SAAtB,iBAAyF,0BAAYA,WAAW,KAAvB,WAAzF,kBAA+J,0BAAYA,WAAW,KAAvB,oBAA/J,kDAA8Q,0BAAYA,WAAW,KAAvB,SAA9Q,OAAuU,0BAAYA,WAAW,KAAvB,SAAvU,yCACA,sBACE,kBAAIA,WAAW,MAAf,gBAAqC,0BAAYA,WAAW,MAAvB,WAArC,IAA8F,0BAAYA,WAAW,MAAvB,oBAA9F,gDAA4M,0BAAYA,WAAW,MAAvB,WAA5M,SACA,kBAAIA,WAAW,MAAf,OAA4B,0BAAYA,WAAW,MAAvB,oBAA5B,kBAA4G,0BAAYA,WAAW,MAAvB,WAA5G,2CAA4M,0BAAYA,WAAW,MAAvB,WAA5M,IAAqQ,0BAAYA,WAAW,MAAvB,oBAArQ,QACA,kBAAIA,WAAW,MAAf,QAA6B,0BAAYA,WAAW,MAAvB,WAA7B,IAAsF,0BAAYA,WAAW,MAAvB,oBAAtF,gBAAoK,sBAAQA,WAAW,MAAnB,WAApK,OAAwN,0BAAYA,WAAW,MAAvB,gBAAxN,0DAA4U,kBAAIA,WAAW,MACvV,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,wBAApB,YAAkG,0BAAYA,WAAW,MAAvB,0BAClG,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,wBAApB,YAAkG,0BAAYA,WAAW,MAAvB,+BAO5GH,EAAWI,gBAAiB","file":"component---src-pages-features-api-migration-mdx-37dacf9622782ef256a5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`As new CustomResourceDefinition API versions are released, the API migrations which occur on those boundaries will be documented here.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Background</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">v1beta2 migration</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Background`}</h2>\n    <p>{`As we iterate on the DataPower Operator, add new functionality, etc. our APIs will invetibly change over time. Our APIs are described by our CustomResourceDefinitions (CRDs), which have an `}<inlineCode parentName=\"p\">{`apiVersion`}</inlineCode>{` associated with them. Each version of a given CRD can have its own schema, and thus the functionality of a given CRD version can change over time.`}</p>\n    <p>{`For more information on the conversion webhook that makes these migrations possible, see our `}<a parentName=\"p\" {...{\n        \"href\": \"/features/webhooks#conversion-webhook\"\n      }}>{`Conversion webhook`}</a>{` documentation.`}</p>\n    <h2>{`v1beta2 migration`}</h2>\n    <p>{`The release of `}<inlineCode parentName=\"p\">{`1.1.0`}</inlineCode>{` introduces a `}<inlineCode parentName=\"p\">{`v1beta2`}</inlineCode>{` API and a new `}<inlineCode parentName=\"p\">{`DataPowerMonitor`}</inlineCode>{` CustomResourceDefinition. When upgrading from `}<inlineCode parentName=\"p\">{`1.0.x`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`1.1.x`}</inlineCode>{` the following migrations will occur:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Any existing `}<inlineCode parentName=\"li\">{`v1beta1`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` Custom Resources (CRs) will be converted to `}<inlineCode parentName=\"li\">{`v1beta2`}</inlineCode>{` CRs.`}</li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`dataPowerMonitor`}</inlineCode>{` spec from the `}<inlineCode parentName=\"li\">{`v1beta1`}</inlineCode>{` CR will be translated to an equivalent `}<inlineCode parentName=\"li\">{`v1beta2`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`DataPowerMonitor`}</inlineCode>{` CR.`}</li>\n      <li parentName=\"ul\">{`If a `}<inlineCode parentName=\"li\">{`v1beta1`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`DataPowerService`}</inlineCode>{` specified a `}<strong parentName=\"li\">{`channel`}</strong>{` in `}<inlineCode parentName=\"li\">{`spec.version`}</inlineCode>{` it will be converted according to the following rules:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`spec.version: 10.0.0`}</inlineCode>{` becomes `}<inlineCode parentName=\"li\">{`spec.version: 10.0-cd`}</inlineCode></li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`spec.version: 10.0.1`}</inlineCode>{` becomes `}<inlineCode parentName=\"li\">{`spec.version: 10.0-lts`}</inlineCode></li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}