{"version":3,"sources":["webpack:///./src/pages/troubleshooting/operator-upgrades.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-troubleshooting-operator-upgrades-mdx-d38d01ba84415c2ff6e2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`If any known issues exist or migration paths are needed to upgrade from one version of the DataPower Operator to another, they will be documented here.`}</p>\n    </PageDescription>\n    <h1>{`1.2.0`}</h1>\n    <h2>{`Pod Topology Spread Constraints`}</h2>\n    <h3>{`Symptoms`}</h3>\n    <p>{`DataPower Operator pods fail to schedule, stating that no nodes match pod topology spread constraints (missing required label).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`0/15 nodes are available: 12 node(s) didn't match pod topology spread constraints (missing required label), 3 node(s) had taint {node-role.kubernetes.io/master: }, that the pod didn't tolerate.\n`}</code></pre>\n    <h3>{`Description`}</h3>\n    <p>{`There was a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/kubernetes/kubernetes/issues/95808\"\n      }}>{`Kubernetes bug`}</a>{` that allowed for pods to schedule when `}<inlineCode parentName=\"p\">{`topologyKey`}</inlineCode>{` was not matched. Kubernetes recently fixed this bug in 1.20, and back-ported the fix to 1.18 and 1.19.`}</p>\n    <p>{`Once this fix is installed to a Kubernetes cluster, the scheduler would no longer schedule DataPower Operator pods, due to the `}<inlineCode parentName=\"p\">{`topologyKey`}</inlineCode>{` in our pod spec not using a well-known “zone” label.`}</p>\n    <h3>{`Solution`}</h3>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`We have fixed this issue in DataPower Operator version `}<inlineCode parentName=\"p\">{`1.2.1`}</inlineCode>{`, see `}<a parentName=\"p\" {...{\n          \"href\": \"/release-notes#1.2.1\"\n        }}>{`Release notes`}</a>{`.`}</p>\n    </InlineNotification>\n    <p>{`Performing a clean installation of DataPower Operator version `}<inlineCode parentName=\"p\">{`1.2.1`}</inlineCode>{` or higher should succeed without the below workaround needed. However, if you previously tried to upgrade to `}<inlineCode parentName=\"p\">{`1.2.0`}</inlineCode>{` and the upgrade is stuck in a pending state, the following workaround can be used to allow the `}<inlineCode parentName=\"p\">{`1.2.0`}</inlineCode>{` install to complete.`}</p>\n    <p>{`Manually add a `}<inlineCode parentName=\"p\">{`zone`}</inlineCode>{` label (with any value) to one of the worker nodes in the Kubernetes cluster. The DataPower Operator pods will then be scheduled to that worker node.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl label nodes <node-name> zone=<label-value>\n`}</code></pre>\n    <p>{`Reference: `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#step-one-attach-label-to-the-node\"\n      }}>{`Assigning Pods to Nodes`}</a></p>\n    <p>{`Optionally, once a successful upgrade to `}<inlineCode parentName=\"p\">{`1.2.1`}</inlineCode>{` has been completed, the `}<inlineCode parentName=\"p\">{`zone`}</inlineCode>{` label can be removed from the node(s) in the cluster. This `}<inlineCode parentName=\"p\">{`zone`}</inlineCode>{` label is no longer used in `}<inlineCode parentName=\"p\">{`1.2.1`}</inlineCode>{` or higher.`}</p>\n    <h2>{`Slow Kubernetes garbage collection can cause webhook service creation to fail`}</h2>\n    <h3>{`Symptoms`}</h3>\n    <p>{`An error may be seen that indicates a webhook `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` is not found:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`failed calling webhook \"datapowerservices.defaulter.datapower.ibm.com\": Post https://datapower-operator.default.svc:443/default-datapower-ibm-com-v1beta2-datapowerservice?timeout=2s: service \"datapower-operator\" not found\n`}</code></pre>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`datapower-operator`}</inlineCode>{` pod logs, the following log message is seen indicating the `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` exists already:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\"level\":\"info\",\"ts\":\"2020-10-06T20:32:45.818Z\",\"logger\":\"setup-webhook\",\"msg\":\"webhook service found. skip create\"}\n`}</code></pre>\n    <p>{`However, checking for the `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` object (name `}<inlineCode parentName=\"p\">{`datapower-operator`}</inlineCode>{`) in the namespace would show it does not exist:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ kubectl get svc datapower-operator\n`}</code></pre>\n    <h3>{`Description`}</h3>\n    <p>{`During the DataPower Operator boot the defaulting and validating webhooks are initialized. As part of this process, a `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` object is created if not found in the cluster. If the Kubernetes garbage collection is slow or delayed it is possible for the `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` object to have been marked for deletion, but still exist in the namespace for a span of time. If the new DataPower Operator pod attempts to initialize the new `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` resource during this time window, the operator will continue through the boot sequence without creating a new `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` instance.`}</p>\n    <p>{`Once the Kubernetes garbage collection catches up, and the `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` is deleted, no `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{` will remain to expose the webhooks and thus API errors will be seen when invoking the webhooks.`}</p>\n    <h3>{`Solution`}</h3>\n    <p>{`To resolve this issue, the DataPower Operator pod can be deleted manually. Once this is done, the Deployment’s ReplicaSet controller will spin up a new DataPower Operator pod, which will in turn create the webhook `}<inlineCode parentName=\"p\">{`Service`}</inlineCode>{`.`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Fetch the DataPower Operator pod, taking note of the name (will be the first column in the output).`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl [-n namespace] get pod | grep datapower-operator\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Delete the DataPower Operator pod, where `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` is the name of the pod found in Step 5.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl [-n namespace] delete pod/name\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Validate a new pod is created in its place.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl [-n namespace] get pod | grep datapower-operator\n`}</code></pre>\n      </li>\n    </ol>\n    <h1>{`1.1.0`}</h1>\n    <h2>{`Operator lock not released after Leader Pod removed`}</h2>\n    <h3>{`Symptoms`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Immediately following an upgrade from 1.0.X to 1.1.X, you may see the following error when attempting to interact with a DataPowerService CR:`}<pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`Error from server: conversion webhook for datapower.ibm.com/v1beta1, Kind=DataPowerService failed: Post https://changeme.default.svc:443/?timeout=30s: service \"changeme\" not found\n`}</code></pre></li>\n      <li parentName=\"ul\">{`Failure to reconcile changes made to a DataPowerService CR after a failover event caused the previous DataPower Operator Leader Pod to be rescheduled.`}</li>\n    </ul>\n    <h3>{`Description`}</h3>\n    <p>{`Occasionally, when the DataPower Operator Leader Pod is removed, the new DataPower Operator Pod will show as being Ready but isn’t doing anything. In the logs you might see`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\"level\":\"info\",\"ts\":\"2020-09-08T19:29:53.432Z\",\"logger\":\"leader\",\"msg\":\"Not the leader. Waiting.\"}\n{\"level\":\"info\",\"ts\":\"2020-09-08T19:29:57.971Z\",\"logger\":\"leader\",\"msg\":\"Leader pod has been deleted, waiting for garbage collection do remove the lock.\"}\n`}</code></pre>\n    <p>{`followed by additional waiting. In this case, Kubernetes’ garbage collection failed to clean up the `}<inlineCode parentName=\"p\">{`datapower-operator-lock`}</inlineCode>{` after the old Leader Pod was removed. This stops the new DataPower Operator Pod from completing initialization tasks such as creating the conversion webhook.`}</p>\n    <h3>{`Solution`}</h3>\n    <p>{`To resolve this issue, you must manually remove the lock resource. This can be done with`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`kubectl delete cm datapower-operator-lock\n`}</code></pre>\n    <p>{`Once the lock is removed, the new DataPower Operator pod will begin its initialization.`}</p>\n    <h1>{`1.0.1`}</h1>\n    <h2>{`Invalid value for `}<inlineCode parentName=\"h2\">{`spec.selector`}</inlineCode></h2>\n    <p>{`When attempting to ugprade from `}<inlineCode parentName=\"p\">{`1.0.0`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`1.0.1`}</inlineCode>{` through the Operator Lifecycle Manager, an error will likely be seen that the `}<inlineCode parentName=\"p\">{`installPlan`}</inlineCode>{` failed.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`install strategy failed: Deployment.apps \"datapower-operator\" is invalid: spec.selector: Invalid value: v1.LabelSelector{...}, MatchExpressions:[]v1.LabelSelectorRequirement(nil)}: field is immutable\n`}</code></pre>\n    <p>{`This error occurs because between version `}<inlineCode parentName=\"p\">{`1.0.0`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`1.0.1`}</inlineCode>{` a new `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` was added to the DataPower Operator Deployment resource to fix an issue related to operator-metrics. However, the install plan is not able to resolve this update because the LabelSelector is an immutable field.`}</p>\n    <h3>{`Resolution`}</h3>\n    <p>{`To workaround this issue, you can manually delete the existing `}<inlineCode parentName=\"p\">{`datapower-operator`}</inlineCode>{` Deployment resource. The Operator Lifecycle Manager should then recreate the `}<inlineCode parentName=\"p\">{`datapower-operator`}</inlineCode>{` Deployment resource with the `}<inlineCode parentName=\"p\">{`1.0.1`}</inlineCode>{` spec, and the install plan should succeed.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc delete deployment datapower-operator\n`}</code></pre>\n    <p>{`Once done, validate a new `}<inlineCode parentName=\"p\">{`datapower-operator`}</inlineCode>{` Deployment is created:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc get deployment\n`}</code></pre>\n    <p>{`Then validate the `}<inlineCode parentName=\"p\">{`1.0.1`}</inlineCode>{` install plan succeeds by checking the `}<inlineCode parentName=\"p\">{`ClusterServiceVersion`}</inlineCode>{` resource:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ oc get csv\nNAME                        DISPLAY                 VERSION   REPLACES                    PHASE\ndatapower-operator.v1.0.1   IBM DataPower Gateway   1.0.1     datapower-operator.v1.0.0   Succeeded\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}